/* Generated by Yosys 0.27+30 (git sha1 101075611, clang 14.0.0 -fPIC -Os) */

module \$paramod$185a78aaeb26934965324d226816976281f8c2dc\rr_arb_tree_52163_F264E (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  wire [2:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  input clk_i;
  wire clk_i;
  input [354:0] data_i;
  wire [354:0] data_i;
  output [70:0] data_o;
  wire [70:0] data_o;
  input flush_i;
  wire flush_i;
  wire [496:0] \gen_arbiter.data_nodes ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [2:0] \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  wire [6:0] \gen_arbiter.gnt_nodes ;
  wire [20:0] \gen_arbiter.index_nodes ;
  wire [4:0] \gen_arbiter.req_d ;
  wire [6:0] \gen_arbiter.req_nodes ;
  reg [2:0] \gen_arbiter.rr_q ;
  input gnt_i;
  wire gnt_i;
  output [4:0] gnt_o;
  wire [4:0] gnt_o;
  output [2:0] idx_o;
  wire [2:0] idx_o;
  input [4:0] req_i;
  wire [4:0] req_i;
  output req_o;
  wire req_o;
  input [2:0] rr_i;
  wire [2:0] rr_i;
  input rst_ni;
  wire rst_ni;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:358$549.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:358$550.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$533.$result ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$534.$result ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$543.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$544.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$545.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$546.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$547.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$548.inp ;
  assign _01_ = req_i[1] & \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [3] & _19_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [4] & _20_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [3] & \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [4] & \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _03_ = req_i[4] & \gen_arbiter.rr_q [2];
  assign _04_ = \gen_arbiter.req_nodes [4] & \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & _23_;
  assign \gen_arbiter.gnt_nodes [3] = \gen_arbiter.gnt_nodes [1] & _24_;
  assign gnt_o[4] = \gen_arbiter.gnt_nodes [2] & req_i[4];
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.gnt_nodes [4] = \gen_arbiter.gnt_nodes [1] & \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 3'h0;
    else if (_05_) \gen_arbiter.rr_q  <= _00_;
  assign _05_ = | { _16_, flush_i };
  assign _06_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _07_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _08_ = 32'd2 > \gen_arbiter.rr_q ;
  assign _09_ = 32'd3 > \gen_arbiter.rr_q ;
  assign _10_ = 32'd4 > \gen_arbiter.rr_q ;
  assign _11_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _12_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _13_ = 32'd2 <= \gen_arbiter.rr_q ;
  assign _14_ = 32'd3 <= \gen_arbiter.rr_q ;
  assign _15_ = 32'd4 <= \gen_arbiter.rr_q ;
  assign _16_ = gnt_i && req_o;
  assign _17_ = ~ req_i[0];
  assign _18_ = ~ req_i[2];
  assign _19_ = ~ \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign _20_ = ~ \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _21_ = ~ \gen_arbiter.req_nodes [1];
  assign _22_ = ~ \gen_arbiter.req_nodes [3];
  assign _23_ = ~ \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign _24_ = ~ \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [3] = req_i[0] | req_i[1];
  assign \gen_arbiter.req_nodes [4] = req_i[2] | req_i[3];
  assign \gen_arbiter.gen_levels[2].gen_level[0].sel  = _17_ | _01_;
  assign \gen_arbiter.gen_levels[2].gen_level[1].sel  = _18_ | _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | req_i[4];
  assign \gen_arbiter.req_nodes [1] = \gen_arbiter.req_nodes [3] | \gen_arbiter.req_nodes [4];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _21_ | _03_;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _22_ | _04_;
  assign _00_ = flush_i ? 3'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _06_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _07_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _08_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _09_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [4] = _10_ ? req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _11_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _12_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _13_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _14_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [4] = _15_ ? req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _16_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 3'hx;
  assign \gen_arbiter.data_nodes [283:213] = \gen_arbiter.gen_levels[2].gen_level[0].sel  ? data_i[141:71] : data_i[70:0];
  assign \gen_arbiter.data_nodes [354:284] = \gen_arbiter.gen_levels[2].gen_level[1].sel  ? data_i[283:213] : data_i[212:142];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? { 1'h1, \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$533.$result [1:0] } : { 1'h0, \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$534.$result [1:0] };
  assign { \gen_arbiter.index_nodes [5], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$534.$result [1:0] } = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? { 2'h1, \gen_arbiter.gen_levels[2].gen_level[1].sel  } : { 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel  };
  assign { \gen_arbiter.index_nodes [8], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$533.$result [1:0] } = req_i[4] ? 3'h0 : 3'h2;
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? \gen_arbiter.data_nodes [212:142] : \gen_arbiter.data_nodes [141:71];
  assign \gen_arbiter.data_nodes [141:71] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? \gen_arbiter.data_nodes [354:284] : \gen_arbiter.data_nodes [283:213];
  assign \gen_arbiter.data_nodes [212:142] = req_i[4] ? data_i[354:284] : 71'h000000000000000000;
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign { \gen_arbiter.data_nodes [496:355], \gen_arbiter.data_nodes [70:0] } = { 71'h000000000000000000, data_i[354:284], data_o };
  assign { \gen_arbiter.gnt_nodes [5], \gen_arbiter.gnt_nodes [0] } = { gnt_o[4], gnt_i };
  assign { \gen_arbiter.index_nodes [20:9], \gen_arbiter.index_nodes [7:6], \gen_arbiter.index_nodes [4:0] } = { 8'h00, \gen_arbiter.gen_levels[2].gen_level[1].sel , 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel , \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$533.$result [1:0], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$534.$result [1:0], idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign { \gen_arbiter.req_nodes [6:5], \gen_arbiter.req_nodes [2], \gen_arbiter.req_nodes [0] } = { 1'h0, req_i[4], req_i[4], req_o };
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:358$549.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:358$550.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$533.$result [2] = 1'h1;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$534.$result [2] = 1'h0;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$543.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$544.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$545.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$546.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$547.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:378$548.inp  = 3'hx;
endmodule

module \$paramod$18cbe9ddd45d6db008a81458e5d62968423a591c\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [70:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [354:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [191:0] operands_i;
  wire [191:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$185a78aaeb26934965324d226816976281f8c2dc\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(355'h7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 355'h7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[70:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$2bbdcb15df9f001cde24ec3dd803ff8e473e7de8\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [70:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [354:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [127:0] operands_i;
  wire [127:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$185a78aaeb26934965324d226816976281f8c2dc\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(355'h7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 355'h7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[70:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$31f974446ce6fd2dee5fb264f8aed0375d9cb0b7\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire _1_;
  wire [70:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [354:0] fmt_outputs;
  wire \gen_parallel_slices[0].active_format.in_valid ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [127:0] operands_i;
  wire [127:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _1_;
  assign \gen_parallel_slices[0].active_format.in_valid  = in_valid_i & _0_;
  assign _0_ = ! dst_fmt_i;
  wire [4:0] _6_ = { 4'h0, fmt_in_ready[0] };
  assign _1_ = _6_[dst_fmt_i +: 1];
  \$paramod$3b802d33fc224a4a6140c2b6f325b14da3293570\fpnew_opgroup_fmt_slice_E368D_75924  \gen_parallel_slices[0].active_format.i_fmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .extension_bit_o(fmt_outputs[1]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_parallel_slices[0].active_format.in_valid ),
    .is_boxed_i(is_boxed_i[1:0]),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[70:7]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(fmt_outputs[6:2]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[0]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$185a78aaeb26934965324d226816976281f8c2dc\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 284'hfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, fmt_outputs[70:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[354:71] = 284'hfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[70:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$3b802d33fc224a4a6140c2b6f325b14da3293570\fpnew_opgroup_fmt_slice_E368D_75924 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i, busy_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire \gen_num_lanes[0].active_lane.in_valid ;
  wire [63:0] \gen_num_lanes[0].active_lane.local_operands ;
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  wire \gen_num_lanes[0].active_lane.out_ready ;
  wire \gen_num_lanes[0].active_lane.out_valid ;
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i ;
  wire [31:0] \gen_num_lanes[0].local_result ;
  wire \gen_num_lanes[0].local_sign ;
  wire [63:0] \gen_num_lanes[1].active_lane.local_operands ;
  wire [31:0] \gen_num_lanes[1].active_lane.op_result ;
  wire [4:0] \gen_num_lanes[1].active_lane.op_status ;
  wire \gen_num_lanes[1].active_lane.out_valid ;
  wire [31:0] \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_1.i ;
  wire [31:0] \gen_num_lanes[1].local_result ;
  wire \gen_num_lanes[1].local_sign ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  wire [1:0] lane_busy;
  wire [19:0] lane_class_mask;
  wire [1:0] lane_ext_bit;
  wire [1:0] lane_in_ready;
  wire [1:0] lane_is_class;
  wire [1:0] lane_out_valid;
  wire [9:0] lane_status;
  wire [1:0] lane_tags;
  wire [1:0] lane_vectorial;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [127:0] operands_i;
  wire [127:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  wire [31:0] \output_processing.sv2v_autoblock_2.i ;
  wire [4:0] \output_processing.temp_status ;
  wire result_is_class;
  wire result_is_vector;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  wire [63:0] slice_class_result;
  wire [63:0] slice_regular_result;
  wire [63:0] slice_result;
  wire [63:0] slice_vec_class_result;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  wire vectorial_op;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign lane_out_valid[1] = \gen_num_lanes[1].active_lane.out_valid  & result_is_vector;
  assign _05_ = lane_class_mask[19:10] == 10'h002;
  assign _06_ = lane_class_mask[19:10] == 10'h004;
  assign _07_ = lane_class_mask[19:10] == 10'h008;
  assign _08_ = lane_class_mask[9:0] == 10'h080;
  assign _00_ = lane_class_mask[9:0] == 10'h001;
  assign _09_ = lane_class_mask[9:0] == 10'h040;
  assign _01_ = lane_class_mask[9:0] == 10'h002;
  assign _10_ = lane_class_mask[9:0] == 10'h020;
  assign _02_ = lane_class_mask[9:0] == 10'h004;
  assign _11_ = lane_class_mask[9:0] == 10'h010;
  assign _03_ = lane_class_mask[9:0] == 10'h008;
  assign slice_vec_class_result[4] = lane_class_mask[9:0] == 10'h100;
  assign slice_vec_class_result[5] = lane_class_mask[9:0] == 10'h200;
  assign _12_ = lane_class_mask[19:10] == 10'h080;
  assign _04_ = lane_class_mask[19:10] == 10'h001;
  assign _13_ = lane_class_mask[19:10] == 10'h040;
  assign _14_ = lane_class_mask[19:10] == 10'h020;
  assign _15_ = lane_class_mask[19:10] == 10'h010;
  assign slice_vec_class_result[12] = lane_class_mask[19:10] == 10'h100;
  assign slice_vec_class_result[13] = lane_class_mask[19:10] == 10'h200;
  assign _16_ = _00_ || _01_;
  assign _17_ = _16_ || _02_;
  assign \gen_num_lanes[0].local_sign  = _17_ || _03_;
  assign _18_ = _04_ || _05_;
  assign _19_ = _18_ || _06_;
  assign \gen_num_lanes[1].local_sign  = _19_ || _07_;
  assign slice_vec_class_result[0] = _08_ || _00_;
  assign slice_vec_class_result[1] = _09_ || _01_;
  assign slice_vec_class_result[2] = _10_ || _02_;
  assign slice_vec_class_result[3] = _11_ || _03_;
  assign slice_vec_class_result[8] = _12_ || _04_;
  assign slice_vec_class_result[9] = _13_ || _05_;
  assign slice_vec_class_result[10] = _14_ || _06_;
  assign slice_vec_class_result[11] = _15_ || _07_;
  assign slice_vec_class_result[6] = ~ \gen_num_lanes[0].local_sign ;
  assign slice_vec_class_result[14] = ~ \gen_num_lanes[1].local_sign ;
  assign status_o = lane_status[4:0] | lane_status[9:5];
  assign busy_o = | lane_busy;
  assign \gen_num_lanes[0].local_result  = lane_out_valid[0] ? \gen_num_lanes[0].active_lane.op_result  : { lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0] };
  assign \gen_num_lanes[1].local_result  = lane_out_valid[1] ? \gen_num_lanes[1].active_lane.op_result  : { lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0], lane_ext_bit[0] };
  assign lane_status[4:0] = lane_out_valid[0] ? \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign lane_status[9:5] = lane_out_valid[1] ? \gen_num_lanes[1].active_lane.op_status  : 5'h00;
  assign slice_class_result = result_is_vector ? { 48'h000000000000, \gen_num_lanes[1].local_sign , slice_vec_class_result[14:8], \gen_num_lanes[0].local_sign , slice_vec_class_result[6:0] } : { 54'h00000000000000, lane_class_mask[9:0] };
  assign result_o = result_is_class ? slice_class_result : { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign extension_bit_o = lane_ext_bit[0];
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands  = { operands_i[95:64], operands_i[31:0] };
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.out_valid  = lane_out_valid[0];
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd2;
  assign \gen_num_lanes[1].active_lane.local_operands  = { operands_i[127:96], operands_i[63:32] };
  assign \gen_num_lanes[1].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd2;
  assign lane_in_ready[0] = in_ready_o;
  assign lane_is_class[0] = result_is_class;
  assign lane_tags[0] = tag_o;
  assign lane_vectorial[0] = result_is_vector;
  assign out_valid_o = lane_out_valid[0];
  assign \output_processing.sv2v_autoblock_2.i  = 32'd2;
  assign \output_processing.temp_status  = status_o;
  assign slice_regular_result = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign slice_result = { \gen_num_lanes[1].local_result , \gen_num_lanes[0].local_result  };
  assign { slice_vec_class_result[63:15], slice_vec_class_result[7] } = { 48'h000000000000, \gen_num_lanes[1].local_sign , \gen_num_lanes[0].local_sign  };
  assign vectorial_op = vectorial_op_i;
endmodule

module \$paramod$b6f4f1b02a211c1e78d7d2720378cb5dfa7eeadb\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [70:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [354:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [191:0] operands_i;
  wire [191:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$185a78aaeb26934965324d226816976281f8c2dc\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(355'h7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 355'h7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[70:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$dcefb278f98568004a538681237df7bb9d0c5fc2\FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_21317_11D0A (clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire [69:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  input flush_i;
  wire flush_i;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$125.$result ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$160.$result ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$209.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$225.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$241.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$257.op ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$55.$result ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$90.$result ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:91$193.op ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:91$36.$result ;
  wire \gen_operation_groups[0].in_valid ;
  wire [14:0] \gen_operation_groups[0].input_boxed ;
  wire [31:0] \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[1].in_valid ;
  wire [9:0] \gen_operation_groups[1].input_boxed ;
  wire [31:0] \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[2].in_valid ;
  wire [9:0] \gen_operation_groups[2].input_boxed ;
  wire [31:0] \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[3].in_valid ;
  wire [14:0] \gen_operation_groups[3].input_boxed ;
  wire [31:0] \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  wire [14:0] is_boxed;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [191:0] operands_i;
  wire [191:0] operands_i;
  wire [3:0] opgrp_busy;
  wire [3:0] opgrp_ext;
  wire [3:0] opgrp_in_ready;
  wire [3:0] opgrp_out_ready;
  wire [3:0] opgrp_out_valid;
  wire [279:0] opgrp_outputs;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$779  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$779 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$779 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$779 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$779 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$779 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$779 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$779 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$779 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$779 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$779 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$779 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$779 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$779 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$779 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$779 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$779 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$160.$result  = \$auto$proc_rom.cc:150:do_switch$779 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$783  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$783 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$783 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$783 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$783 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$783 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$783 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$783 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$783 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$783 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$783 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$783 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$783 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$783 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$783 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$783 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$783 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$125.$result  = \$auto$proc_rom.cc:150:do_switch$783 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$787  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$787 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$787 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$787 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$787 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$787 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$787 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$787 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$787 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$787 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$787 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$787 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$787 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$787 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$787 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$787 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$787 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$90.$result  = \$auto$proc_rom.cc:150:do_switch$787 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$791  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$791 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$791 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$791 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$791 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$791 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$791 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$791 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$791 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$791 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$791 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$791 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$791 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$791 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$791 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$791 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$791 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$55.$result  = \$auto$proc_rom.cc:150:do_switch$791 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$795  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$795 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$795 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$795 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$795 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$795 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$795 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$795 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$795 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$795 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$795 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$795 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$795 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$795 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$795 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$795 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$795 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:91$36.$result  = \$auto$proc_rom.cc:150:do_switch$795 [op_i];
  assign \gen_operation_groups[0].in_valid  = in_valid_i & _09_;
  assign \gen_operation_groups[1].in_valid  = in_valid_i & _10_;
  assign \gen_operation_groups[2].in_valid  = in_valid_i & _11_;
  assign \gen_operation_groups[3].in_valid  = in_valid_i & _12_;
  assign in_ready_o = in_valid_i & _13_;
  assign _00_ = operands_i[63:32] == 32'd4294967295;
  assign _01_ = operands_i[127:96] == 32'd4294967295;
  assign _02_ = operands_i[191:160] == 32'd4294967295;
  assign _06_ = operands_i[63:8] == 56'hffffffffffffff;
  assign _07_ = operands_i[127:72] == 56'hffffffffffffff;
  assign _08_ = operands_i[191:136] == 56'hffffffffffffff;
  assign _03_ = operands_i[63:16] == 48'hffffffffffff;
  assign _04_ = operands_i[127:80] == 48'hffffffffffff;
  assign _05_ = operands_i[191:144] == 48'hffffffffffff;
  assign _09_ = ! \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$55.$result ;
  assign _10_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$90.$result  == 2'h1;
  assign _11_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$125.$result  == 2'h2;
  assign _12_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$160.$result  == 2'h3;
  assign busy_o = | opgrp_busy;
  wire [3:0] _53_ = opgrp_in_ready;
  assign _13_ = _53_[\fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:91$36.$result  +: 1];
  assign \gen_operation_groups[0].input_boxed [0] = vectorial_op_i ? 1'h1 : _00_;
  assign \gen_operation_groups[0].input_boxed [1] = vectorial_op_i ? 1'h1 : _01_;
  assign \gen_operation_groups[0].input_boxed [2] = vectorial_op_i ? 1'h1 : _02_;
  assign \gen_operation_groups[0].input_boxed [9] = vectorial_op_i ? 1'h1 : _06_;
  assign \gen_operation_groups[0].input_boxed [10] = vectorial_op_i ? 1'h1 : _07_;
  assign \gen_operation_groups[0].input_boxed [11] = vectorial_op_i ? 1'h1 : _08_;
  assign \gen_operation_groups[0].input_boxed [12] = vectorial_op_i ? 1'h1 : _03_;
  assign \gen_operation_groups[0].input_boxed [13] = vectorial_op_i ? 1'h1 : _04_;
  assign \gen_operation_groups[0].input_boxed [14] = vectorial_op_i ? 1'h1 : _05_;
  \$paramod$b6f4f1b02a211c1e78d7d2720378cb5dfa7eeadb\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[0].i_opgroup_block  (
    .busy_o(opgrp_busy[0]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[0]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[0]),
    .in_valid_i(\gen_operation_groups[0].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[0]),
    .out_valid_o(opgrp_out_valid[0]),
    .result_o(opgrp_outputs[69:6]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[5:1]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[0]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$31f974446ce6fd2dee5fb264f8aed0375d9cb0b7\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[1].i_opgroup_block  (
    .busy_o(opgrp_busy[1]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[1]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[1]),
    .in_valid_i(\gen_operation_groups[1].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[127:0]),
    .out_ready_i(opgrp_out_ready[1]),
    .out_valid_o(opgrp_out_valid[1]),
    .result_o(opgrp_outputs[139:76]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[75:71]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[70]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$2bbdcb15df9f001cde24ec3dd803ff8e473e7de8\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[2].i_opgroup_block  (
    .busy_o(opgrp_busy[2]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[2]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[2]),
    .in_valid_i(\gen_operation_groups[2].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[127:0]),
    .out_ready_i(opgrp_out_ready[2]),
    .out_valid_o(opgrp_out_valid[2]),
    .result_o(opgrp_outputs[209:146]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[145:141]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[140]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$18cbe9ddd45d6db008a81458e5d62968423a591c\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[3].i_opgroup_block  (
    .busy_o(opgrp_busy[3]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[3]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[3]),
    .in_valid_i(\gen_operation_groups[3].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[3]),
    .out_valid_o(opgrp_out_valid[3]),
    .result_o(opgrp_outputs[279:216]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[215:211]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[210]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$fae5ad9294fb0147f58e7b25b41cae5f38b2142b\rr_arb_tree_DE4E6_76EE6  i_arbiter (
    .clk_i(clk_i),
    .data_i(opgrp_outputs),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(opgrp_out_ready),
    .req_i(opgrp_out_valid),
    .req_o(out_valid_o),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$209.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$225.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$241.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:140$257.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:91$193.op  = 4'hx;
  assign \gen_operation_groups[0].input_boxed [8:3] = { \gen_operation_groups[0].input_boxed [14:12], 3'h7 };
  assign \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[1].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] };
  assign \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[2].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 2'h3, \gen_operation_groups[0].input_boxed [1:0] };
  assign \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[3].input_boxed  = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] };
  assign \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign is_boxed = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 3'h7, \gen_operation_groups[0].input_boxed [2:0] };
  assign result_o = arbiter_output[69:6];
  assign status_o = arbiter_output[5:1];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$fae5ad9294fb0147f58e7b25b41cae5f38b2142b\rr_arb_tree_DE4E6_76EE6 (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  input clk_i;
  wire clk_i;
  input [279:0] data_i;
  wire [279:0] data_i;
  output [69:0] data_o;
  wire [69:0] data_o;
  input flush_i;
  wire flush_i;
  wire [209:0] \gen_arbiter.data_nodes ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  wire [2:0] \gen_arbiter.gnt_nodes ;
  wire [5:0] \gen_arbiter.index_nodes ;
  wire [3:0] \gen_arbiter.req_d ;
  wire [2:0] \gen_arbiter.req_nodes ;
  reg [1:0] \gen_arbiter.rr_q ;
  input gnt_i;
  wire gnt_i;
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  output [1:0] idx_o;
  wire [1:0] idx_o;
  input [3:0] req_i;
  wire [3:0] req_i;
  output req_o;
  wire req_o;
  input [1:0] rr_i;
  wire [1:0] rr_i;
  input rst_ni;
  wire rst_ni;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:536$461.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:536$462.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:556$459.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:556$460.inp ;
  assign _01_ = req_i[1] & \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [1] & _16_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [2] & _17_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [1] & \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [2] & \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _03_ = \gen_arbiter.req_nodes [2] & \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & _19_;
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 2'h0;
    else if (_04_) \gen_arbiter.rr_q  <= _00_;
  assign _04_ = | { _13_, flush_i };
  assign _05_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _06_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _07_ = 32'd2 > \gen_arbiter.rr_q ;
  assign _08_ = 32'd3 > \gen_arbiter.rr_q ;
  assign _09_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _10_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _11_ = 32'd2 <= \gen_arbiter.rr_q ;
  assign _12_ = 32'd3 <= \gen_arbiter.rr_q ;
  assign _13_ = gnt_i && req_o;
  assign _14_ = ~ req_i[0];
  assign _15_ = ~ req_i[2];
  assign _16_ = ~ \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign _17_ = ~ \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _18_ = ~ \gen_arbiter.req_nodes [1];
  assign _19_ = ~ \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [1] = req_i[0] | req_i[1];
  assign \gen_arbiter.req_nodes [2] = req_i[2] | req_i[3];
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _14_ | _01_;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = _15_ | _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | \gen_arbiter.req_nodes [2];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _18_ | _03_;
  assign _00_ = flush_i ? 2'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _05_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _06_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _07_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _08_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _09_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _10_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _11_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _12_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _13_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 2'hx;
  assign \gen_arbiter.data_nodes [139:70] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? data_i[139:70] : data_i[69:0];
  assign \gen_arbiter.data_nodes [209:140] = \gen_arbiter.gen_levels[1].gen_level[1].sel  ? data_i[279:210] : data_i[209:140];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? { 1'h1, \gen_arbiter.gen_levels[1].gen_level[1].sel  } : { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? \gen_arbiter.data_nodes [209:140] : \gen_arbiter.data_nodes [139:70];
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign \gen_arbiter.data_nodes [69:0] = data_o;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.index_nodes  = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel , 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel , idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign \gen_arbiter.req_nodes [0] = req_o;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:536$461.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:536$462.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:556$459.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_yosys.v:556$460.inp  = 2'hx;
endmodule

module \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0 (in_i, cnt_o, empty_o);
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  output empty_o;
  wire empty_o;
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  wire [3:0] \gen_lzc.in_tmp ;
  wire [7:0] \gen_lzc.index_lut ;
  wire [7:0] \gen_lzc.index_nodes ;
  wire [3:0] \gen_lzc.sel_nodes ;
  input [3:0] in_i;
  wire [3:0] in_i;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [1] = in_i[0] | in_i[1];
  assign \gen_lzc.sel_nodes [2] = in_i[2] | in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | \gen_lzc.sel_nodes [2];
  assign \gen_lzc.index_nodes [3:2] = in_i[0] ? 2'h0 : 2'h1;
  assign \gen_lzc.index_nodes [5:4] = in_i[2] ? 2'h2 : 2'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? \gen_lzc.index_nodes [3:2] : \gen_lzc.index_nodes [5:4];
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd4;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 8'he4;
  assign \gen_lzc.index_nodes [1:0] = cnt_o;
endmodule

module \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0 (in_i, cnt_o, empty_o);
  output [2:0] cnt_o;
  wire [2:0] cnt_o;
  output empty_o;
  wire empty_o;
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  wire [4:0] \gen_lzc.in_tmp ;
  wire [14:0] \gen_lzc.index_lut ;
  wire [23:0] \gen_lzc.index_nodes ;
  wire [7:0] \gen_lzc.sel_nodes ;
  input [4:0] in_i;
  wire [4:0] in_i;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [3] = in_i[0] | in_i[1];
  assign \gen_lzc.sel_nodes [4] = in_i[2] | in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | in_i[4];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | \gen_lzc.sel_nodes [4];
  assign \gen_lzc.index_nodes [11:9] = in_i[0] ? 3'h0 : 3'h1;
  assign \gen_lzc.index_nodes [14:12] = in_i[2] ? 3'h2 : 3'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? \gen_lzc.index_nodes [5:3] : \gen_lzc.index_nodes [8:6];
  assign \gen_lzc.index_nodes [5:3] = \gen_lzc.sel_nodes [3] ? \gen_lzc.index_nodes [11:9] : \gen_lzc.index_nodes [14:12];
  assign \gen_lzc.index_nodes [8:6] = in_i[4] ? 3'h4 : 3'h0;
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd5;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 15'h4688;
  assign { \gen_lzc.index_nodes [20:15], \gen_lzc.index_nodes [2:0] } = { 6'h04, cnt_o };
  assign { \gen_lzc.sel_nodes [6:5], \gen_lzc.sel_nodes [2] } = { 1'h0, in_i[4], in_i[4] };
endmodule

module FPNewBlackbox_tyfloat_l2_1s_1tw_2ops(clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  input flush_i;
  wire flush_i;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [191:0] operands_i;
  wire [191:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [63:0] result_o;
  wire [63:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  \$paramod$dcefb278f98568004a538681237df7bb9d0c5fc2\FPNewBlackbox_tyfloat_l2_1s_1tw_2ops_21317_11D0A  inst (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .int_fmt_i(int_fmt_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(out_ready_i),
    .out_valid_o(out_valid_o),
    .result_o(result_o),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(status_o),
    .tag_i(tag_i),
    .tag_o(tag_o),
    .vectorial_op_i(vectorial_op_i)
  );
endmodule
