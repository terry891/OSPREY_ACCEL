/* Generated by Yosys 0.27+30 (git sha1 101075611, clang 14.0.0 -fPIC -Os) */

module \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  wire [2:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  input clk_i;
  wire clk_i;
  input [194:0] data_i;
  wire [194:0] data_i;
  output [38:0] data_o;
  wire [38:0] data_o;
  input flush_i;
  wire flush_i;
  wire [272:0] \gen_arbiter.data_nodes ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [2:0] \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  wire [6:0] \gen_arbiter.gnt_nodes ;
  wire [20:0] \gen_arbiter.index_nodes ;
  wire [4:0] \gen_arbiter.req_d ;
  wire [6:0] \gen_arbiter.req_nodes ;
  reg [2:0] \gen_arbiter.rr_q ;
  input gnt_i;
  wire gnt_i;
  output [4:0] gnt_o;
  wire [4:0] gnt_o;
  output [2:0] idx_o;
  wire [2:0] idx_o;
  input [4:0] req_i;
  wire [4:0] req_i;
  output req_o;
  wire req_o;
  input [2:0] rr_i;
  wire [2:0] rr_i;
  input rst_ni;
  wire rst_ni;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:358$539.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:358$540.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$523.$result ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$524.$result ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$533.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$534.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$535.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$536.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$537.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$538.inp ;
  assign _01_ = req_i[1] & \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [3] & _19_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [4] & _20_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [3] & \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [4] & \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _03_ = req_i[4] & \gen_arbiter.rr_q [2];
  assign _04_ = \gen_arbiter.req_nodes [4] & \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & _23_;
  assign \gen_arbiter.gnt_nodes [3] = \gen_arbiter.gnt_nodes [1] & _24_;
  assign gnt_o[4] = \gen_arbiter.gnt_nodes [2] & req_i[4];
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.gnt_nodes [4] = \gen_arbiter.gnt_nodes [1] & \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 3'h0;
    else if (_05_) \gen_arbiter.rr_q  <= _00_;
  assign _05_ = | { _16_, flush_i };
  assign _06_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _07_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _08_ = 32'd2 > \gen_arbiter.rr_q ;
  assign _09_ = 32'd3 > \gen_arbiter.rr_q ;
  assign _10_ = 32'd4 > \gen_arbiter.rr_q ;
  assign _11_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _12_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _13_ = 32'd2 <= \gen_arbiter.rr_q ;
  assign _14_ = 32'd3 <= \gen_arbiter.rr_q ;
  assign _15_ = 32'd4 <= \gen_arbiter.rr_q ;
  assign _16_ = gnt_i && req_o;
  assign _17_ = ~ req_i[0];
  assign _18_ = ~ req_i[2];
  assign _19_ = ~ \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign _20_ = ~ \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _21_ = ~ \gen_arbiter.req_nodes [1];
  assign _22_ = ~ \gen_arbiter.req_nodes [3];
  assign _23_ = ~ \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign _24_ = ~ \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [3] = req_i[0] | req_i[1];
  assign \gen_arbiter.req_nodes [4] = req_i[2] | req_i[3];
  assign \gen_arbiter.gen_levels[2].gen_level[0].sel  = _17_ | _01_;
  assign \gen_arbiter.gen_levels[2].gen_level[1].sel  = _18_ | _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | req_i[4];
  assign \gen_arbiter.req_nodes [1] = \gen_arbiter.req_nodes [3] | \gen_arbiter.req_nodes [4];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _21_ | _03_;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _22_ | _04_;
  assign _00_ = flush_i ? 3'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _06_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _07_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _08_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _09_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [4] = _10_ ? req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _11_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _12_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _13_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _14_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [4] = _15_ ? req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _16_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 3'hx;
  assign \gen_arbiter.data_nodes [155:117] = \gen_arbiter.gen_levels[2].gen_level[0].sel  ? data_i[77:39] : data_i[38:0];
  assign \gen_arbiter.data_nodes [194:156] = \gen_arbiter.gen_levels[2].gen_level[1].sel  ? data_i[155:117] : data_i[116:78];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? { 1'h1, \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$523.$result [1:0] } : { 1'h0, \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$524.$result [1:0] };
  assign { \gen_arbiter.index_nodes [5], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$524.$result [1:0] } = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? { 2'h1, \gen_arbiter.gen_levels[2].gen_level[1].sel  } : { 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel  };
  assign { \gen_arbiter.index_nodes [8], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$523.$result [1:0] } = req_i[4] ? 3'h0 : 3'h2;
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? \gen_arbiter.data_nodes [116:78] : \gen_arbiter.data_nodes [77:39];
  assign \gen_arbiter.data_nodes [77:39] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? \gen_arbiter.data_nodes [194:156] : \gen_arbiter.data_nodes [155:117];
  assign \gen_arbiter.data_nodes [116:78] = req_i[4] ? data_i[194:156] : 39'h0000000000;
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign { \gen_arbiter.data_nodes [272:195], \gen_arbiter.data_nodes [38:0] } = { 39'h0000000000, data_i[194:156], data_o };
  assign { \gen_arbiter.gnt_nodes [5], \gen_arbiter.gnt_nodes [0] } = { gnt_o[4], gnt_i };
  assign { \gen_arbiter.index_nodes [20:9], \gen_arbiter.index_nodes [7:6], \gen_arbiter.index_nodes [4:0] } = { 8'h00, \gen_arbiter.gen_levels[2].gen_level[1].sel , 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel , \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$523.$result [1:0], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$524.$result [1:0], idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign { \gen_arbiter.req_nodes [6:5], \gen_arbiter.req_nodes [2], \gen_arbiter.req_nodes [0] } = { 1'h0, req_i[4], req_i[4], req_o };
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:358$539.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:358$540.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$523.$result [2] = 1'h1;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$524.$result [2] = 1'h0;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$533.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$534.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$535.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$536.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$537.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:378$538.inp  = 3'hx;
endmodule

module \$paramod$375bff7dd5de64f04e99c7614eef794cffe5d364\fpnew_noncomp_8EF6A_8033C (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, tag_i, aux_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, class_mask_o, is_class_o, tag_o, aux_o, out_valid_o, out_ready_i
, busy_o);
  wire _000_;
  wire [31:0] _001_;
  wire [9:0] _002_;
  wire [31:0] _003_;
  wire _004_;
  wire [31:0] _005_;
  wire [9:0] _006_;
  wire [31:0] _007_;
  wire _008_;
  wire [31:0] _009_;
  wire [9:0] _010_;
  wire [31:0] _011_;
  wire [31:0] _012_;
  wire [9:0] _013_;
  wire [31:0] _014_;
  wire [31:0] _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire [31:0] _028_;
  wire [31:0] _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire [31:0] _038_;
  wire [31:0] _039_;
  wire [9:0] _040_;
  wire [9:0] _041_;
  wire [9:0] _042_;
  wire [9:0] _043_;
  wire [9:0] _044_;
  wire _045_;
  wire [31:0] _046_;
  wire [31:0] _047_;
  wire [31:0] _048_;
  wire any_operand_nan;
  input aux_i;
  wire aux_i;
  output aux_o;
  wire aux_o;
  output busy_o;
  wire busy_o;
  wire class_extension_bit;
  wire [9:0] class_mask_d;
  output [9:0] class_mask_o;
  wire [9:0] class_mask_o;
  wire [4:0] class_status;
  input clk_i;
  wire clk_i;
  wire cmp_extension_bit;
  wire [31:0] cmp_result;
  wire [4:0] cmp_status;
  wire extension_bit_d;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire \gen_input_pipeline[0].reg_ena ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  wire [7:0] info_a;
  wire [7:0] info_b;
  wire [15:0] info_q;
  wire [0:1] inp_pipe_aux_q;
  wire [3:0] inp_pipe_is_boxed_q;
  wire [0:1] inp_pipe_op_mod_q;
  wire [7:0] inp_pipe_op_q;
  wire [127:0] inp_pipe_operands_q;
  wire [0:1] inp_pipe_ready;
  wire [5:0] inp_pipe_rnd_mode_q;
  wire [1:0] inp_pipe_tag_q;
  wire [0:1] inp_pipe_valid_q;
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  wire is_class_d;
  output is_class_o;
  wire is_class_o;
  wire minmax_extension_bit;
  wire [31:0] minmax_result;
  wire [4:0] minmax_status;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  wire [31:0] operand_a;
  wire operand_a_smaller;
  wire [31:0] operand_b;
  wire operands_equal;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  wire out_pipe_aux_q;
  wire [9:0] out_pipe_class_mask_q;
  wire out_pipe_extension_bit_q;
  wire out_pipe_is_class_q;
  wire out_pipe_ready;
  wire [31:0] out_pipe_result_q;
  wire [4:0] out_pipe_status_q;
  wire out_pipe_tag_q;
  wire out_pipe_valid_q;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  wire [31:0] result_d;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  wire sgnj_extension_bit;
  wire [31:0] sgnj_result;
  wire [4:0] sgnj_status;
  wire \sign_injections.sign_a ;
  wire \sign_injections.sign_b ;
  wire signalling_nan;
  wire [4:0] status_d;
  output [4:0] status_o;
  wire [4:0] status_o;
  wire [32:1] sv2v_tmp_07494;
  wire [4:1] sv2v_tmp_0B797;
  wire sv2v_tmp_2CB8C;
  wire sv2v_tmp_488B7;
  wire [3:1] sv2v_tmp_62109;
  wire sv2v_tmp_73AEA;
  wire sv2v_tmp_7DF01;
  wire [2:1] sv2v_tmp_86D63;
  wire sv2v_tmp_8D189;
  wire sv2v_tmp_8E9A9;
  wire sv2v_tmp_93CB4;
  wire [10:1] sv2v_tmp_94259;
  wire [5:1] sv2v_tmp_CCE43;
  wire [64:1] sv2v_tmp_D1067;
  wire sv2v_tmp_D1C37;
  wire sv2v_tmp_FA930;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  assign \gen_input_pipeline[0].reg_ena  = in_ready_o & in_valid_i;
  assign \sign_injections.sign_a  = inp_pipe_operands_q[31] & info_q[0];
  assign \sign_injections.sign_b  = inp_pipe_operands_q[63] & info_q[8];
  assign _015_ = operand_a_smaller & _028_;
  reg [3:0] _053_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _053_ <= 4'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _053_ <= op_i;
  assign inp_pipe_op_q[3:0] = _053_;
  reg \inp_pipe_valid_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_valid_q_reg[0]  <= 1'h0;
    else if (_016_) \inp_pipe_valid_q_reg[0]  <= _000_;
  assign inp_pipe_valid_q[1] = \inp_pipe_valid_q_reg[0] ;
  reg [2:0] _055_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _055_ <= 3'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _055_ <= rnd_mode_i;
  assign inp_pipe_rnd_mode_q[2:0] = _055_;
  reg [1:0] _056_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _056_ <= 2'h0;
    else if (\gen_input_pipeline[0].reg_ena ) _056_ <= is_boxed_i;
  assign inp_pipe_is_boxed_q[1:0] = _056_;
  reg \inp_pipe_aux_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_aux_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_aux_q_reg[0]  <= aux_i;
  assign inp_pipe_aux_q[1] = \inp_pipe_aux_q_reg[0] ;
  reg \inp_pipe_tag_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_tag_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_tag_q_reg[0]  <= tag_i;
  assign inp_pipe_tag_q[0] = \inp_pipe_tag_q_reg[0] ;
  reg \inp_pipe_op_mod_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \inp_pipe_op_mod_q_reg[0]  <= 1'h0;
    else if (\gen_input_pipeline[0].reg_ena ) \inp_pipe_op_mod_q_reg[0]  <= op_mod_i;
  assign inp_pipe_op_mod_q[1] = \inp_pipe_op_mod_q_reg[0] ;
  reg [63:0] _060_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _060_ <= 64'h0000000000000000;
    else if (\gen_input_pipeline[0].reg_ena ) _060_ <= operands_i;
  assign inp_pipe_operands_q[63:0] = _060_;
  assign _016_ = | { in_ready_o, flush_i };
  assign _017_ = | { _032_, _031_, _030_ };
  assign _018_ = | { _035_, is_class_o };
  assign _019_ = | { is_class_o, _034_ };
  assign _020_ = | { _031_, _030_ };
  assign _021_ = inp_pipe_operands_q[31:0] == inp_pipe_operands_q[63:32];
  assign _022_ = info_q[5] && info_q[13];
  assign _023_ = info_q[3] && info_q[11];
  assign operands_equal = _021_ || _022_;
  assign _024_ = inp_pipe_operands_q[31] || inp_pipe_operands_q[63];
  assign _025_ = inp_pipe_operands_q[31:0] < inp_pipe_operands_q[63:32];
  assign _026_ = ~ inp_pipe_valid_q[1];
  assign _027_ = ~ \sign_injections.sign_b ;
  assign _028_ = ~ { 31'h00000000, operands_equal };
  assign in_ready_o = out_ready_i | _026_;
  assign _029_ = operand_a_smaller | operands_equal;
  assign _011_ = any_operand_nan ? 32'd0 : _047_;
  assign _008_ = any_operand_nan ? 1'h1 : 1'h0;
  assign _007_ = any_operand_nan ? 32'd0 : _046_;
  assign _004_ = _020_ ? _008_ : 1'h0;
  function [31:0] _081_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _081_ = b[31:0];
      3'b?1?:
        _081_ = b[63:32];
      3'b1??:
        _081_ = b[95:64];
      default:
        _081_ = a;
    endcase
  endfunction
  assign _003_ = _081_(32'd2155872257, { _007_, _011_, _014_ }, { _031_, _030_, _032_ });
  assign cmp_status[4] = signalling_nan ? 1'h1 : _004_;
  assign cmp_result = signalling_nan ? 32'd0 : _003_;
  function [31:0] _084_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _084_ = b[31:0];
      2'b1?:
        _084_ = b[63:32];
      default:
        _084_ = a;
    endcase
  endfunction
  assign _012_ = _084_(32'd2155872257, { _038_, _039_ }, { _031_, _030_ });
  assign _009_ = info_q[11] ? inp_pipe_operands_q[31:0] : _012_;
  assign _005_ = info_q[3] ? inp_pipe_operands_q[63:32] : _009_;
  assign minmax_result = _023_ ? 32'd2143289344 : _005_;
  function [0:0] _088_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _088_ = b[0:0];
      4'b??1?:
        _088_ = b[1:1];
      4'b?1??:
        _088_ = b[2:2];
      4'b1???:
        _088_ = b[3:3];
      default:
        _088_ = a;
    endcase
  endfunction
  assign sgnj_result[31] = _088_(1'h1, { \sign_injections.sign_b , _027_, _045_, inp_pipe_operands_q[31] }, { _031_, _030_, _032_, _033_ });
  function [30:0] _089_;
    input [30:0] a;
    input [61:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _089_ = b[30:0];
      2'b1?:
        _089_ = b[61:31];
      default:
        _089_ = a;
    endcase
  endfunction
  assign sgnj_result[30:0] = _089_(31'h00800001, { _001_[30:0], inp_pipe_operands_q[30:0] }, { _017_, _033_ });
  assign _033_ = inp_pipe_rnd_mode_q[2:0] == 3'h3;
  assign _032_ = inp_pipe_rnd_mode_q[2:0] == 3'h2;
  assign _030_ = inp_pipe_rnd_mode_q[2:0] == 3'h1;
  assign _031_ = ! inp_pipe_rnd_mode_q[2:0];
  assign _001_ = info_q[0] ? inp_pipe_operands_q[31:0] : 32'd2143289344;
  function [0:0] _095_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _095_ = b[0:0];
      2'b1?:
        _095_ = b[1:1];
      default:
        _095_ = a;
    endcase
  endfunction
  assign extension_bit_o = _095_(1'h1, { sgnj_extension_bit, 1'h0 }, { _035_, _019_ });
  function [4:0] _096_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _096_ = b[4:0];
      3'b?1?:
        _096_ = b[9:5];
      3'b1??:
        _096_ = b[14:10];
      default:
        _096_ = a;
    endcase
  endfunction
  assign status_o = _096_(5'h1f, { signalling_nan, 4'h0, cmp_status[4], 9'h000 }, { _036_, _034_, _018_ });
  assign is_class_o = inp_pipe_op_q[3:0] == 4'h9;
  function [31:0] _098_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _098_ = b[31:0];
      3'b?1?:
        _098_ = b[63:32];
      3'b1??:
        _098_ = b[95:64];
      default:
        _098_ = a;
    endcase
  endfunction
  assign result_o = _098_(32'd2155872257, { sgnj_result, minmax_result, cmp_result }, { _035_, _036_, _034_ });
  assign _034_ = inp_pipe_op_q[3:0] == 4'h8;
  assign _036_ = inp_pipe_op_q[3:0] == 4'h7;
  assign _035_ = inp_pipe_op_q[3:0] == 4'h6;
  assign _013_ = info_q[3] ? _044_ : 10'h200;
  assign _010_ = info_q[4] ? _043_ : _013_;
  assign _006_ = info_q[5] ? _042_ : _010_;
  assign _002_ = info_q[6] ? _041_ : _006_;
  assign class_mask_o = info_q[7] ? _040_ : _002_;
  assign _014_ = any_operand_nan ? { 31'h00000000, inp_pipe_op_mod_q[1] } : _048_;
  assign any_operand_nan = | { info_q[11], info_q[3] };
  assign signalling_nan = | { info_q[10], info_q[2] };
  assign busy_o = | { inp_pipe_valid_q[1], in_valid_i };
  assign _037_ = in_ready_o ? in_valid_i : 1'hx;
  assign _000_ = flush_i ? 1'h0 : _037_;
  assign sgnj_extension_bit = inp_pipe_op_mod_q[1] ? sgnj_result[31] : 1'h1;
  assign _038_ = operand_a_smaller ? inp_pipe_operands_q[31:0] : inp_pipe_operands_q[63:32];
  assign _039_ = operand_a_smaller ? inp_pipe_operands_q[63:32] : inp_pipe_operands_q[31:0];
  assign _040_ = inp_pipe_operands_q[31] ? 10'h002 : 10'h040;
  assign _041_ = inp_pipe_operands_q[31] ? 10'h004 : 10'h020;
  assign _042_ = inp_pipe_operands_q[31] ? 10'h008 : 10'h010;
  assign _043_ = inp_pipe_operands_q[31] ? 10'h001 : 10'h080;
  assign _044_ = info_q[2] ? 10'h100 : 10'h200;
  assign operand_a_smaller = _025_ ^ _024_;
  assign _045_ = \sign_injections.sign_a  ^ \sign_injections.sign_b ;
  assign _046_ = _029_ ^ inp_pipe_op_mod_q[1];
  assign _047_ = _015_ ^ inp_pipe_op_mod_q[1];
  assign _048_ = operands_equal ^ inp_pipe_op_mod_q[1];
  \$paramod$85706ecd625e0110cf3fb9a4d880c019350a6cdb\fpnew_classifier  i_class_a (
    .info_o(info_q),
    .is_boxed_i(inp_pipe_is_boxed_q[1:0]),
    .operands_i(inp_pipe_operands_q[63:0])
  );
  assign aux_o = inp_pipe_aux_q[1];
  assign class_extension_bit = 1'h0;
  assign class_mask_d = class_mask_o;
  assign class_status = 5'h00;
  assign cmp_extension_bit = 1'h0;
  assign cmp_status[3:0] = 4'h0;
  assign extension_bit_d = extension_bit_o;
  assign info_a = info_q[7:0];
  assign info_b = info_q[15:8];
  assign inp_pipe_aux_q[0] = aux_i;
  assign inp_pipe_is_boxed_q[3:2] = is_boxed_i;
  assign inp_pipe_op_mod_q[0] = op_mod_i;
  assign inp_pipe_op_q[7:4] = op_i;
  assign inp_pipe_operands_q[127:64] = operands_i;
  assign inp_pipe_ready = { in_ready_o, out_ready_i };
  assign inp_pipe_rnd_mode_q[5:3] = rnd_mode_i;
  assign inp_pipe_tag_q[1] = tag_i;
  assign inp_pipe_valid_q[0] = in_valid_i;
  assign is_class_d = is_class_o;
  assign minmax_extension_bit = 1'h1;
  assign minmax_status = { signalling_nan, 4'h0 };
  assign operand_a = inp_pipe_operands_q[31:0];
  assign operand_b = inp_pipe_operands_q[63:32];
  assign out_pipe_aux_q = inp_pipe_aux_q[1];
  assign out_pipe_class_mask_q = class_mask_o;
  assign out_pipe_extension_bit_q = extension_bit_o;
  assign out_pipe_is_class_q = is_class_o;
  assign out_pipe_ready = out_ready_i;
  assign out_pipe_result_q = result_o;
  assign out_pipe_status_q = status_o;
  assign out_pipe_tag_q = inp_pipe_tag_q[0];
  assign out_pipe_valid_q = inp_pipe_valid_q[1];
  assign out_valid_o = inp_pipe_valid_q[1];
  assign result_d = result_o;
  assign sgnj_status = 5'h00;
  assign status_d = status_o;
  assign sv2v_tmp_07494 = result_o;
  assign sv2v_tmp_0B797 = op_i;
  assign sv2v_tmp_2CB8C = inp_pipe_valid_q[1];
  assign sv2v_tmp_488B7 = tag_i;
  assign sv2v_tmp_62109 = rnd_mode_i;
  assign sv2v_tmp_73AEA = in_valid_i;
  assign sv2v_tmp_7DF01 = is_class_o;
  assign sv2v_tmp_86D63 = is_boxed_i;
  assign sv2v_tmp_8D189 = aux_i;
  assign sv2v_tmp_8E9A9 = extension_bit_o;
  assign sv2v_tmp_93CB4 = inp_pipe_tag_q[0];
  assign sv2v_tmp_94259 = class_mask_o;
  assign sv2v_tmp_CCE43 = status_o;
  assign sv2v_tmp_D1067 = operands_i;
  assign sv2v_tmp_D1C37 = op_mod_i;
  assign sv2v_tmp_FA930 = inp_pipe_aux_q[1];
  assign tag_o = inp_pipe_tag_q[0];
endmodule

module \$paramod$78bb9057e4eca19d34dd44abcaa1f70852d0b351\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(195'h7ffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 195'h7ffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$805805c25935282cb1a7ad36270e63559a513e52\fpnew_opgroup_fmt_slice_E368D_75924 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i, busy_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire \gen_num_lanes[0].active_lane.in_valid ;
  wire [63:0] \gen_num_lanes[0].active_lane.local_operands ;
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  wire \gen_num_lanes[0].active_lane.out_ready ;
  wire \gen_num_lanes[0].active_lane.out_valid ;
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i ;
  wire [31:0] \gen_num_lanes[0].local_result ;
  wire \gen_num_lanes[0].local_sign ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  wire lane_busy;
  wire [9:0] lane_class_mask;
  wire lane_ext_bit;
  wire lane_in_ready;
  wire lane_is_class;
  wire lane_out_valid;
  wire [4:0] lane_status;
  wire lane_tags;
  wire lane_vectorial;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  wire [31:0] \output_processing.sv2v_autoblock_2.i ;
  wire [4:0] \output_processing.temp_status ;
  wire result_is_class;
  wire result_is_vector;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  wire [31:0] slice_class_result;
  wire [31:0] slice_regular_result;
  wire [31:0] slice_result;
  wire [31:0] slice_vec_class_result;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  wire vectorial_op;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign _02_ = lane_class_mask == 10'h004;
  assign _03_ = lane_class_mask == 10'h008;
  assign _04_ = lane_class_mask == 10'h080;
  assign _00_ = lane_class_mask == 10'h001;
  assign _05_ = lane_class_mask == 10'h040;
  assign _01_ = lane_class_mask == 10'h002;
  assign _06_ = lane_class_mask == 10'h020;
  assign _07_ = lane_class_mask == 10'h010;
  assign slice_vec_class_result[4] = lane_class_mask == 10'h100;
  assign slice_vec_class_result[5] = lane_class_mask == 10'h200;
  assign _08_ = _00_ || _01_;
  assign _09_ = _08_ || _02_;
  assign \gen_num_lanes[0].local_sign  = _09_ || _03_;
  assign slice_vec_class_result[0] = _04_ || _00_;
  assign slice_vec_class_result[1] = _05_ || _01_;
  assign slice_vec_class_result[2] = _06_ || _02_;
  assign slice_vec_class_result[3] = _07_ || _03_;
  assign slice_vec_class_result[6] = ~ \gen_num_lanes[0].local_sign ;
  assign slice_regular_result = \gen_num_lanes[0].active_lane.out_valid  ? \gen_num_lanes[0].active_lane.op_result  : { lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit };
  assign status_o = \gen_num_lanes[0].active_lane.out_valid  ? \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign slice_class_result = lane_vectorial ? { 24'h000000, \gen_num_lanes[0].local_sign , slice_vec_class_result[6:0] } : { 22'h000000, lane_class_mask };
  assign result_o = lane_is_class ? slice_class_result : slice_regular_result;
  \$paramod$375bff7dd5de64f04e99c7614eef794cffe5d364\fpnew_noncomp_8EF6A_8033C  \gen_num_lanes[0].active_lane.genblk1.genblk1.lane_instance.i_noncomp  (
    .aux_i(vectorial_op_i),
    .aux_o(lane_vectorial),
    .busy_o(lane_busy),
    .class_mask_o(lane_class_mask),
    .clk_i(clk_i),
    .extension_bit_o(lane_ext_bit),
    .flush_i(flush_i),
    .in_ready_o(lane_in_ready),
    .in_valid_i(in_valid_i),
    .is_boxed_i(is_boxed_i),
    .is_class_o(lane_is_class),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(out_ready_i),
    .out_valid_o(\gen_num_lanes[0].active_lane.out_valid ),
    .result_o(\gen_num_lanes[0].active_lane.op_result ),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(\gen_num_lanes[0].active_lane.op_status ),
    .tag_i(tag_i),
    .tag_o(lane_tags)
  );
  assign busy_o = lane_busy;
  assign extension_bit_o = lane_ext_bit;
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands  = operands_i;
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd2;
  assign \gen_num_lanes[0].local_result  = slice_regular_result;
  assign in_ready_o = lane_in_ready;
  assign lane_out_valid = \gen_num_lanes[0].active_lane.out_valid ;
  assign lane_status = status_o;
  assign out_valid_o = \gen_num_lanes[0].active_lane.out_valid ;
  assign \output_processing.sv2v_autoblock_2.i  = 32'd1;
  assign \output_processing.temp_status  = status_o;
  assign result_is_class = lane_is_class;
  assign result_is_vector = lane_vectorial;
  assign slice_result = slice_regular_result;
  assign slice_vec_class_result[31:7] = { 24'h000000, \gen_num_lanes[0].local_sign  };
  assign tag_o = lane_tags;
  assign vectorial_op = vectorial_op_i;
endmodule

module \$paramod$85706ecd625e0110cf3fb9a4d880c019350a6cdb\fpnew_classifier (operands_i, is_boxed_i, info_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire \gen_num_values[0].is_boxed ;
  wire \gen_num_values[0].is_inf ;
  wire \gen_num_values[0].is_nan ;
  wire \gen_num_values[0].is_normal ;
  wire \gen_num_values[0].is_quiet ;
  wire \gen_num_values[0].is_signalling ;
  wire \gen_num_values[0].is_subnormal ;
  wire \gen_num_values[0].is_zero ;
  wire [31:0] \gen_num_values[0].value ;
  wire \gen_num_values[1].is_boxed ;
  wire \gen_num_values[1].is_inf ;
  wire \gen_num_values[1].is_nan ;
  wire \gen_num_values[1].is_normal ;
  wire \gen_num_values[1].is_quiet ;
  wire \gen_num_values[1].is_signalling ;
  wire \gen_num_values[1].is_subnormal ;
  wire \gen_num_values[1].is_zero ;
  wire [31:0] \gen_num_values[1].value ;
  output [15:0] info_o;
  wire [15:0] info_o;
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  assign _00_ = ! operands_i[30:23];
  assign _02_ = ! operands_i[62:55];
  assign _01_ = ! operands_i[22:0];
  assign _03_ = ! operands_i[54:32];
  assign _04_ = operands_i[30:23] == 8'hff;
  assign _05_ = operands_i[62:55] == 8'hff;
  assign _06_ = ~ operands_i[22];
  assign _07_ = ~ operands_i[54];
  assign _08_ = is_boxed_i[0] && _24_;
  assign \gen_num_values[0].is_normal  = _08_ && _25_;
  assign _09_ = is_boxed_i[1] && _26_;
  assign \gen_num_values[1].is_normal  = _09_ && _27_;
  assign \gen_num_values[0].is_zero  = _10_ && _01_;
  assign \gen_num_values[1].is_zero  = _11_ && _03_;
  assign _10_ = is_boxed_i[0] && _00_;
  assign \gen_num_values[0].is_subnormal  = _10_ && _18_;
  assign _11_ = is_boxed_i[1] && _02_;
  assign \gen_num_values[1].is_subnormal  = _11_ && _19_;
  assign _12_ = _04_ && _01_;
  assign \gen_num_values[0].is_inf  = is_boxed_i[0] && _12_;
  assign _13_ = _05_ && _03_;
  assign \gen_num_values[1].is_inf  = is_boxed_i[1] && _13_;
  assign _14_ = _04_ && _28_;
  assign _15_ = _05_ && _29_;
  assign _16_ = is_boxed_i[0] && \gen_num_values[0].is_nan ;
  assign \gen_num_values[0].is_signalling  = _16_ && _06_;
  assign _17_ = is_boxed_i[1] && \gen_num_values[1].is_nan ;
  assign \gen_num_values[1].is_signalling  = _17_ && _07_;
  assign \gen_num_values[0].is_quiet  = \gen_num_values[0].is_nan  && _22_;
  assign \gen_num_values[1].is_quiet  = \gen_num_values[1].is_nan  && _23_;
  assign _18_ = ! \gen_num_values[0].is_zero ;
  assign _19_ = ! \gen_num_values[1].is_zero ;
  assign _20_ = ! is_boxed_i[0];
  assign _21_ = ! is_boxed_i[1];
  assign _22_ = ! \gen_num_values[0].is_signalling ;
  assign _23_ = ! \gen_num_values[1].is_signalling ;
  assign \gen_num_values[0].is_nan  = _20_ || _14_;
  assign \gen_num_values[1].is_nan  = _21_ || _15_;
  assign _24_ = | operands_i[30:23];
  assign _25_ = operands_i[30:23] != 8'hff;
  assign _26_ = | operands_i[62:55];
  assign _27_ = operands_i[62:55] != 8'hff;
  assign _28_ = | operands_i[22:0];
  assign _29_ = | operands_i[54:32];
  assign \gen_num_values[0].is_boxed  = is_boxed_i[0];
  assign \gen_num_values[0].value  = operands_i[31:0];
  assign \gen_num_values[1].is_boxed  = is_boxed_i[1];
  assign \gen_num_values[1].value  = operands_i[63:32];
  assign info_o = { \gen_num_values[1].is_normal , \gen_num_values[1].is_subnormal , \gen_num_values[1].is_zero , \gen_num_values[1].is_inf , \gen_num_values[1].is_nan , \gen_num_values[1].is_signalling , \gen_num_values[1].is_quiet , is_boxed_i[1], \gen_num_values[0].is_normal , \gen_num_values[0].is_subnormal , \gen_num_values[0].is_zero , \gen_num_values[0].is_inf , \gen_num_values[0].is_nan , \gen_num_values[0].is_signalling , \gen_num_values[0].is_quiet , is_boxed_i[0] };
endmodule

module \$paramod$8ae0fb4846518a699069525c1fbcfc9ca6c7fb2d\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(195'h7ffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 195'h7ffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$ac5d1bb59eb35c82ef1cb4969caa670087e5e66d\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(195'h7ffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 195'h7ffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$b3c6ae59e8a1e2b2dbfe44abf5da1c619dd310c0\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire _1_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  wire \gen_parallel_slices[0].active_format.in_valid ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _1_;
  assign \gen_parallel_slices[0].active_format.in_valid  = in_valid_i & _0_;
  assign _0_ = ! dst_fmt_i;
  wire [4:0] _6_ = { 4'h0, fmt_in_ready[0] };
  assign _1_ = _6_[dst_fmt_i +: 1];
  \$paramod$805805c25935282cb1a7ad36270e63559a513e52\fpnew_opgroup_fmt_slice_E368D_75924  \gen_parallel_slices[0].active_format.i_fmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .extension_bit_o(fmt_outputs[1]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_parallel_slices[0].active_format.in_valid ),
    .is_boxed_i(is_boxed_i[1:0]),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[38:7]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(fmt_outputs[6:2]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[0]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 156'hfffffffffffffffffffffffffffffffffffffff, fmt_outputs[38:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[194:39] = 156'hfffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$c7df8ac0e0155c94d6c50b8fbc9eace2cebb89dd\rr_arb_tree_DE4E6_76EE6 (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  input clk_i;
  wire clk_i;
  input [151:0] data_i;
  wire [151:0] data_i;
  output [37:0] data_o;
  wire [37:0] data_o;
  input flush_i;
  wire flush_i;
  wire [113:0] \gen_arbiter.data_nodes ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  wire [2:0] \gen_arbiter.gnt_nodes ;
  wire [5:0] \gen_arbiter.index_nodes ;
  wire [3:0] \gen_arbiter.req_d ;
  wire [2:0] \gen_arbiter.req_nodes ;
  reg [1:0] \gen_arbiter.rr_q ;
  input gnt_i;
  wire gnt_i;
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  output [1:0] idx_o;
  wire [1:0] idx_o;
  input [3:0] req_i;
  wire [3:0] req_i;
  output req_o;
  wire req_o;
  input [1:0] rr_i;
  wire [1:0] rr_i;
  input rst_ni;
  wire rst_ni;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:536$451.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:536$452.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:556$449.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:556$450.inp ;
  assign _01_ = req_i[1] & \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [1] & _16_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [2] & _17_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [1] & \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [2] & \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _03_ = \gen_arbiter.req_nodes [2] & \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & _19_;
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 2'h0;
    else if (_04_) \gen_arbiter.rr_q  <= _00_;
  assign _04_ = | { _13_, flush_i };
  assign _05_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _06_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _07_ = 32'd2 > \gen_arbiter.rr_q ;
  assign _08_ = 32'd3 > \gen_arbiter.rr_q ;
  assign _09_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _10_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _11_ = 32'd2 <= \gen_arbiter.rr_q ;
  assign _12_ = 32'd3 <= \gen_arbiter.rr_q ;
  assign _13_ = gnt_i && req_o;
  assign _14_ = ~ req_i[0];
  assign _15_ = ~ req_i[2];
  assign _16_ = ~ \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign _17_ = ~ \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _18_ = ~ \gen_arbiter.req_nodes [1];
  assign _19_ = ~ \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [1] = req_i[0] | req_i[1];
  assign \gen_arbiter.req_nodes [2] = req_i[2] | req_i[3];
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _14_ | _01_;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = _15_ | _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | \gen_arbiter.req_nodes [2];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _18_ | _03_;
  assign _00_ = flush_i ? 2'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _05_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _06_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _07_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _08_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _09_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _10_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _11_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _12_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _13_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 2'hx;
  assign \gen_arbiter.data_nodes [75:38] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? data_i[75:38] : data_i[37:0];
  assign \gen_arbiter.data_nodes [113:76] = \gen_arbiter.gen_levels[1].gen_level[1].sel  ? data_i[151:114] : data_i[113:76];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? { 1'h1, \gen_arbiter.gen_levels[1].gen_level[1].sel  } : { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? \gen_arbiter.data_nodes [113:76] : \gen_arbiter.data_nodes [75:38];
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign \gen_arbiter.data_nodes [37:0] = data_o;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.index_nodes  = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel , 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel , idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign \gen_arbiter.req_nodes [0] = req_o;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:536$451.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:536$452.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:556$449.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:556$450.inp  = 2'hx;
endmodule

module \$paramod$f9168fb1cb808fc31df43b169ec70fef0034c103\FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_21317_11D0A (clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire [37:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  input flush_i;
  wire flush_i;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$124.$result ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$159.$result ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$208.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$224.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$240.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$256.op ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$54.$result ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$89.$result ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:91$192.op ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:91$36.$result ;
  wire \gen_operation_groups[0].in_valid ;
  wire [14:0] \gen_operation_groups[0].input_boxed ;
  wire [31:0] \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[1].in_valid ;
  wire [9:0] \gen_operation_groups[1].input_boxed ;
  wire [31:0] \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[2].in_valid ;
  wire [9:0] \gen_operation_groups[2].input_boxed ;
  wire [31:0] \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[3].in_valid ;
  wire [14:0] \gen_operation_groups[3].input_boxed ;
  wire [31:0] \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  wire [14:0] is_boxed;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  wire [3:0] opgrp_busy;
  wire [3:0] opgrp_ext;
  wire [3:0] opgrp_in_ready;
  wire [3:0] opgrp_out_ready;
  wire [3:0] opgrp_out_valid;
  wire [151:0] opgrp_outputs;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$899  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$899 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$899 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$899 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$899 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$899 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$899 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$899 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$899 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$899 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$899 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$899 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$899 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$899 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$899 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$899 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$899 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$159.$result  = \$auto$proc_rom.cc:150:do_switch$899 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$903  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$903 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$903 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$903 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$903 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$903 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$903 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$903 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$903 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$903 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$903 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$903 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$903 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$903 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$903 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$903 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$903 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$124.$result  = \$auto$proc_rom.cc:150:do_switch$903 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$907  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$907 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$907 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$907 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$907 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$907 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$907 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$907 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$907 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$907 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$907 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$907 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$907 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$907 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$907 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$907 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$907 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$89.$result  = \$auto$proc_rom.cc:150:do_switch$907 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$911  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$911 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$911 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$911 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$911 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$911 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$911 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$911 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$911 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$911 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$911 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$911 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$911 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$911 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$911 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$911 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$911 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$54.$result  = \$auto$proc_rom.cc:150:do_switch$911 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$915  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$915 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$915 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$915 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$915 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$915 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$915 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$915 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$915 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$915 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$915 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$915 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$915 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$915 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$915 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$915 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$915 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:91$36.$result  = \$auto$proc_rom.cc:150:do_switch$915 [op_i];
  assign \gen_operation_groups[0].in_valid  = in_valid_i & _06_;
  assign \gen_operation_groups[1].in_valid  = in_valid_i & _07_;
  assign \gen_operation_groups[2].in_valid  = in_valid_i & _08_;
  assign \gen_operation_groups[3].in_valid  = in_valid_i & _09_;
  assign in_ready_o = in_valid_i & _10_;
  assign _03_ = operands_i[31:8] == 24'hffffff;
  assign _04_ = operands_i[63:40] == 24'hffffff;
  assign _05_ = operands_i[95:72] == 24'hffffff;
  assign _00_ = operands_i[31:16] == 16'hffff;
  assign _01_ = operands_i[63:48] == 16'hffff;
  assign _02_ = operands_i[95:80] == 16'hffff;
  assign _06_ = ! \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$54.$result ;
  assign _07_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$89.$result  == 2'h1;
  assign _08_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$124.$result  == 2'h2;
  assign _09_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$159.$result  == 2'h3;
  assign busy_o = | opgrp_busy;
  wire [3:0] _44_ = opgrp_in_ready;
  assign _10_ = _44_[\fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:91$36.$result  +: 1];
  assign \gen_operation_groups[0].input_boxed [9] = vectorial_op_i ? 1'h1 : _03_;
  assign \gen_operation_groups[0].input_boxed [10] = vectorial_op_i ? 1'h1 : _04_;
  assign \gen_operation_groups[0].input_boxed [11] = vectorial_op_i ? 1'h1 : _05_;
  assign \gen_operation_groups[0].input_boxed [12] = vectorial_op_i ? 1'h1 : _00_;
  assign \gen_operation_groups[0].input_boxed [13] = vectorial_op_i ? 1'h1 : _01_;
  assign \gen_operation_groups[0].input_boxed [14] = vectorial_op_i ? 1'h1 : _02_;
  \$paramod$78bb9057e4eca19d34dd44abcaa1f70852d0b351\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[0].i_opgroup_block  (
    .busy_o(opgrp_busy[0]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[0]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[0]),
    .in_valid_i(\gen_operation_groups[0].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[0]),
    .out_valid_o(opgrp_out_valid[0]),
    .result_o(opgrp_outputs[37:6]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[5:1]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[0]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$ac5d1bb59eb35c82ef1cb4969caa670087e5e66d\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[1].i_opgroup_block  (
    .busy_o(opgrp_busy[1]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[1]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[1]),
    .in_valid_i(\gen_operation_groups[1].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[63:0]),
    .out_ready_i(opgrp_out_ready[1]),
    .out_valid_o(opgrp_out_valid[1]),
    .result_o(opgrp_outputs[75:44]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[43:39]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[38]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$b3c6ae59e8a1e2b2dbfe44abf5da1c619dd310c0\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[2].i_opgroup_block  (
    .busy_o(opgrp_busy[2]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[2]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[2]),
    .in_valid_i(\gen_operation_groups[2].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[63:0]),
    .out_ready_i(opgrp_out_ready[2]),
    .out_valid_o(opgrp_out_valid[2]),
    .result_o(opgrp_outputs[113:82]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[81:77]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[76]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$8ae0fb4846518a699069525c1fbcfc9ca6c7fb2d\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[3].i_opgroup_block  (
    .busy_o(opgrp_busy[3]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[3]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[3]),
    .in_valid_i(\gen_operation_groups[3].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[3]),
    .out_valid_o(opgrp_out_valid[3]),
    .result_o(opgrp_outputs[151:120]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[119:115]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[114]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$c7df8ac0e0155c94d6c50b8fbc9eace2cebb89dd\rr_arb_tree_DE4E6_76EE6  i_arbiter (
    .clk_i(clk_i),
    .data_i(opgrp_outputs),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(opgrp_out_ready),
    .req_i(opgrp_out_valid),
    .req_o(out_valid_o),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$208.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$224.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$240.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:140$256.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_yosys.v:91$192.op  = 4'hx;
  assign \gen_operation_groups[0].input_boxed [8:0] = { \gen_operation_groups[0].input_boxed [14:12], 6'h3f };
  assign \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[1].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf };
  assign \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[2].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf };
  assign \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[3].input_boxed  = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f };
  assign \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign is_boxed = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f };
  assign result_o = arbiter_output[37:6];
  assign status_o = arbiter_output[5:1];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0 (in_i, cnt_o, empty_o);
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  output empty_o;
  wire empty_o;
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  wire [3:0] \gen_lzc.in_tmp ;
  wire [7:0] \gen_lzc.index_lut ;
  wire [7:0] \gen_lzc.index_nodes ;
  wire [3:0] \gen_lzc.sel_nodes ;
  input [3:0] in_i;
  wire [3:0] in_i;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [1] = in_i[0] | in_i[1];
  assign \gen_lzc.sel_nodes [2] = in_i[2] | in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | \gen_lzc.sel_nodes [2];
  assign \gen_lzc.index_nodes [3:2] = in_i[0] ? 2'h0 : 2'h1;
  assign \gen_lzc.index_nodes [5:4] = in_i[2] ? 2'h2 : 2'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? \gen_lzc.index_nodes [3:2] : \gen_lzc.index_nodes [5:4];
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd4;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 8'he4;
  assign \gen_lzc.index_nodes [1:0] = cnt_o;
endmodule

module \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0 (in_i, cnt_o, empty_o);
  output [2:0] cnt_o;
  wire [2:0] cnt_o;
  output empty_o;
  wire empty_o;
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  wire [4:0] \gen_lzc.in_tmp ;
  wire [14:0] \gen_lzc.index_lut ;
  wire [23:0] \gen_lzc.index_nodes ;
  wire [7:0] \gen_lzc.sel_nodes ;
  input [4:0] in_i;
  wire [4:0] in_i;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [3] = in_i[0] | in_i[1];
  assign \gen_lzc.sel_nodes [4] = in_i[2] | in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | in_i[4];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | \gen_lzc.sel_nodes [4];
  assign \gen_lzc.index_nodes [11:9] = in_i[0] ? 3'h0 : 3'h1;
  assign \gen_lzc.index_nodes [14:12] = in_i[2] ? 3'h2 : 3'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? \gen_lzc.index_nodes [5:3] : \gen_lzc.index_nodes [8:6];
  assign \gen_lzc.index_nodes [5:3] = \gen_lzc.sel_nodes [3] ? \gen_lzc.index_nodes [11:9] : \gen_lzc.index_nodes [14:12];
  assign \gen_lzc.index_nodes [8:6] = in_i[4] ? 3'h4 : 3'h0;
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd5;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 15'h4688;
  assign { \gen_lzc.index_nodes [20:15], \gen_lzc.index_nodes [2:0] } = { 6'h04, cnt_o };
  assign { \gen_lzc.sel_nodes [6:5], \gen_lzc.sel_nodes [2] } = { 1'h0, in_i[4], in_i[4] };
endmodule

module FPNewBlackbox_tyfloat_l1_1s_1tw_4ops(clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  input flush_i;
  wire flush_i;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  \$paramod$f9168fb1cb808fc31df43b169ec70fef0034c103\FPNewBlackbox_tyfloat_l1_1s_1tw_4ops_21317_11D0A  inst (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .int_fmt_i(int_fmt_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(out_ready_i),
    .out_valid_o(out_valid_o),
    .result_o(result_o),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(status_o),
    .tag_i(tag_i),
    .tag_o(tag_o),
    .vectorial_op_i(vectorial_op_i)
  );
endmodule
