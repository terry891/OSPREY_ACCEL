/* Generated by Yosys 0.27+30 (git sha1 101075611, clang 14.0.0 -fPIC -Os) */

module \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  wire [2:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  input clk_i;
  wire clk_i;
  input [194:0] data_i;
  wire [194:0] data_i;
  output [38:0] data_o;
  wire [38:0] data_o;
  input flush_i;
  wire flush_i;
  wire [272:0] \gen_arbiter.data_nodes ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire [2:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire [4:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [2:0] \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  wire [6:0] \gen_arbiter.gnt_nodes ;
  wire [20:0] \gen_arbiter.index_nodes ;
  wire [4:0] \gen_arbiter.req_d ;
  wire [6:0] \gen_arbiter.req_nodes ;
  reg [2:0] \gen_arbiter.rr_q ;
  input gnt_i;
  wire gnt_i;
  output [4:0] gnt_o;
  wire [4:0] gnt_o;
  output [2:0] idx_o;
  wire [2:0] idx_o;
  input [4:0] req_i;
  wire [4:0] req_i;
  output req_o;
  wire req_o;
  input [2:0] rr_i;
  wire [2:0] rr_i;
  input rst_ni;
  wire rst_ni;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:358$539.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:358$540.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$523.$result ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$524.$result ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$533.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$534.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$535.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$536.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$537.inp ;
  wire [2:0] \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$538.inp ;
  assign _01_ = req_i[1] & \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [3] & _19_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [4] & _20_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [3] & \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [4] & \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _03_ = req_i[4] & \gen_arbiter.rr_q [2];
  assign _04_ = \gen_arbiter.req_nodes [4] & \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & _23_;
  assign \gen_arbiter.gnt_nodes [3] = \gen_arbiter.gnt_nodes [1] & _24_;
  assign gnt_o[4] = \gen_arbiter.gnt_nodes [2] & req_i[4];
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.gnt_nodes [4] = \gen_arbiter.gnt_nodes [1] & \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 3'h0;
    else if (_05_) \gen_arbiter.rr_q  <= _00_;
  assign _05_ = | { _16_, flush_i };
  assign _06_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _07_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _08_ = 32'd2 > \gen_arbiter.rr_q ;
  assign _09_ = 32'd3 > \gen_arbiter.rr_q ;
  assign _10_ = 32'd4 > \gen_arbiter.rr_q ;
  assign _11_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _12_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _13_ = 32'd2 <= \gen_arbiter.rr_q ;
  assign _14_ = 32'd3 <= \gen_arbiter.rr_q ;
  assign _15_ = 32'd4 <= \gen_arbiter.rr_q ;
  assign _16_ = gnt_i && req_o;
  assign _17_ = ~ req_i[0];
  assign _18_ = ~ req_i[2];
  assign _19_ = ~ \gen_arbiter.gen_levels[2].gen_level[0].sel ;
  assign _20_ = ~ \gen_arbiter.gen_levels[2].gen_level[1].sel ;
  assign _21_ = ~ \gen_arbiter.req_nodes [1];
  assign _22_ = ~ \gen_arbiter.req_nodes [3];
  assign _23_ = ~ \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign _24_ = ~ \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [3] = req_i[0] | req_i[1];
  assign \gen_arbiter.req_nodes [4] = req_i[2] | req_i[3];
  assign \gen_arbiter.gen_levels[2].gen_level[0].sel  = _17_ | _01_;
  assign \gen_arbiter.gen_levels[2].gen_level[1].sel  = _18_ | _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | req_i[4];
  assign \gen_arbiter.req_nodes [1] = \gen_arbiter.req_nodes [3] | \gen_arbiter.req_nodes [4];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _21_ | _03_;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _22_ | _04_;
  assign _00_ = flush_i ? 3'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _06_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _07_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _08_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _09_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [4] = _10_ ? req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _11_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _12_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _13_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _14_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [4] = _15_ ? req_i[4] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _16_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 3'hx;
  assign \gen_arbiter.data_nodes [155:117] = \gen_arbiter.gen_levels[2].gen_level[0].sel  ? data_i[77:39] : data_i[38:0];
  assign \gen_arbiter.data_nodes [194:156] = \gen_arbiter.gen_levels[2].gen_level[1].sel  ? data_i[155:117] : data_i[116:78];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? { 1'h1, \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$523.$result [1:0] } : { 1'h0, \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$524.$result [1:0] };
  assign { \gen_arbiter.index_nodes [5], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$524.$result [1:0] } = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? { 2'h1, \gen_arbiter.gen_levels[2].gen_level[1].sel  } : { 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel  };
  assign { \gen_arbiter.index_nodes [8], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$523.$result [1:0] } = req_i[4] ? 3'h0 : 3'h2;
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? \gen_arbiter.data_nodes [116:78] : \gen_arbiter.data_nodes [77:39];
  assign \gen_arbiter.data_nodes [77:39] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? \gen_arbiter.data_nodes [194:156] : \gen_arbiter.data_nodes [155:117];
  assign \gen_arbiter.data_nodes [116:78] = req_i[4] ? data_i[194:156] : 39'h0000000000;
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign { \gen_arbiter.data_nodes [272:195], \gen_arbiter.data_nodes [38:0] } = { 39'h0000000000, data_i[194:156], data_o };
  assign { \gen_arbiter.gnt_nodes [5], \gen_arbiter.gnt_nodes [0] } = { gnt_o[4], gnt_i };
  assign { \gen_arbiter.index_nodes [20:9], \gen_arbiter.index_nodes [7:6], \gen_arbiter.index_nodes [4:0] } = { 8'h00, \gen_arbiter.gen_levels[2].gen_level[1].sel , 2'h0, \gen_arbiter.gen_levels[2].gen_level[0].sel , \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$523.$result [1:0], \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$524.$result [1:0], idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign { \gen_arbiter.req_nodes [6:5], \gen_arbiter.req_nodes [2], \gen_arbiter.req_nodes [0] } = { 1'h0, req_i[4], req_i[4], req_o };
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:358$539.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:358$540.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$523.$result [2] = 1'h1;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$524.$result [2] = 1'h0;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$533.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$534.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$535.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$536.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$537.inp  = 3'hx;
  assign \sv2v_cast_1BFE4$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:378$538.inp  = 3'hx;
endmodule

module \$paramod$4254dd24ee899980926ca0ea97f5501d8a413807\FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_21317_11D0A (clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire [37:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  input flush_i;
  wire flush_i;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$124.$result ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$159.$result ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$208.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$224.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$240.op ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$256.op ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$54.$result ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$89.$result ;
  wire [3:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:91$192.op ;
  wire [1:0] \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:91$36.$result ;
  wire \gen_operation_groups[0].in_valid ;
  wire [14:0] \gen_operation_groups[0].input_boxed ;
  wire [31:0] \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[1].in_valid ;
  wire [9:0] \gen_operation_groups[1].input_boxed ;
  wire [31:0] \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[2].in_valid ;
  wire [9:0] \gen_operation_groups[2].input_boxed ;
  wire [31:0] \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt ;
  wire \gen_operation_groups[3].in_valid ;
  wire [14:0] \gen_operation_groups[3].input_boxed ;
  wire [31:0] \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  wire [14:0] is_boxed;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  wire [3:0] opgrp_busy;
  wire [3:0] opgrp_ext;
  wire [3:0] opgrp_in_ready;
  wire [3:0] opgrp_out_ready;
  wire [3:0] opgrp_out_valid;
  wire [151:0] opgrp_outputs;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$736  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$736 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$736 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$736 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$736 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$736 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$736 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$736 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$736 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$736 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$736 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$736 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$736 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$736 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$736 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$736 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$736 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$159.$result  = \$auto$proc_rom.cc:150:do_switch$736 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$740  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$740 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$740 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$740 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$740 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$740 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$740 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$740 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$740 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$740 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$740 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$740 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$740 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$740 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$740 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$740 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$740 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$124.$result  = \$auto$proc_rom.cc:150:do_switch$740 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$744  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$744 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$744 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$744 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$744 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$744 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$744 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$744 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$744 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$744 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$744 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$744 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$744 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$744 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$744 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$744 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$744 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$89.$result  = \$auto$proc_rom.cc:150:do_switch$744 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$748  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$748 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$748 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$748 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$748 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$748 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$748 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$748 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$748 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$748 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$748 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$748 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$748 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$748 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$748 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$748 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$748 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$54.$result  = \$auto$proc_rom.cc:150:do_switch$748 [op_i];
  reg [1:0] \$auto$proc_rom.cc:150:do_switch$752  [15:0];
  initial begin
    \$auto$proc_rom.cc:150:do_switch$752 [0] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$752 [1] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$752 [2] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$752 [3] = 2'h0;
    \$auto$proc_rom.cc:150:do_switch$752 [4] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$752 [5] = 2'h1;
    \$auto$proc_rom.cc:150:do_switch$752 [6] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$752 [7] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$752 [8] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$752 [9] = 2'h2;
    \$auto$proc_rom.cc:150:do_switch$752 [10] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$752 [11] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$752 [12] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$752 [13] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$752 [14] = 2'h3;
    \$auto$proc_rom.cc:150:do_switch$752 [15] = 2'h2;
  end
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:91$36.$result  = \$auto$proc_rom.cc:150:do_switch$752 [op_i];
  assign \gen_operation_groups[0].in_valid  = in_valid_i & _06_;
  assign \gen_operation_groups[1].in_valid  = in_valid_i & _07_;
  assign \gen_operation_groups[2].in_valid  = in_valid_i & _08_;
  assign \gen_operation_groups[3].in_valid  = in_valid_i & _09_;
  assign in_ready_o = in_valid_i & _10_;
  assign _03_ = operands_i[31:8] == 24'hffffff;
  assign _04_ = operands_i[63:40] == 24'hffffff;
  assign _05_ = operands_i[95:72] == 24'hffffff;
  assign _00_ = operands_i[31:16] == 16'hffff;
  assign _01_ = operands_i[63:48] == 16'hffff;
  assign _02_ = operands_i[95:80] == 16'hffff;
  assign _06_ = ! \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$54.$result ;
  assign _07_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$89.$result  == 2'h1;
  assign _08_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$124.$result  == 2'h2;
  assign _09_ = \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$159.$result  == 2'h3;
  assign busy_o = | opgrp_busy;
  wire [3:0] _44_ = opgrp_in_ready;
  assign _10_ = _44_[\fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:91$36.$result  +: 1];
  assign \gen_operation_groups[0].input_boxed [9] = vectorial_op_i ? 1'h1 : _03_;
  assign \gen_operation_groups[0].input_boxed [10] = vectorial_op_i ? 1'h1 : _04_;
  assign \gen_operation_groups[0].input_boxed [11] = vectorial_op_i ? 1'h1 : _05_;
  assign \gen_operation_groups[0].input_boxed [12] = vectorial_op_i ? 1'h1 : _00_;
  assign \gen_operation_groups[0].input_boxed [13] = vectorial_op_i ? 1'h1 : _01_;
  assign \gen_operation_groups[0].input_boxed [14] = vectorial_op_i ? 1'h1 : _02_;
  \$paramod$78bb9057e4eca19d34dd44abcaa1f70852d0b351\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[0].i_opgroup_block  (
    .busy_o(opgrp_busy[0]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[0]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[0]),
    .in_valid_i(\gen_operation_groups[0].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[0]),
    .out_valid_o(opgrp_out_valid[0]),
    .result_o(opgrp_outputs[37:6]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[5:1]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[0]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$6198635b5a75cb03441151c959726a3ed63638e9\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[1].i_opgroup_block  (
    .busy_o(opgrp_busy[1]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[1]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[1]),
    .in_valid_i(\gen_operation_groups[1].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[63:0]),
    .out_ready_i(opgrp_out_ready[1]),
    .out_valid_o(opgrp_out_valid[1]),
    .result_o(opgrp_outputs[75:44]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[43:39]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[38]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$de025a2a77ec744205232a6386e70416cba816e2\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[2].i_opgroup_block  (
    .busy_o(opgrp_busy[2]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[2]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[2]),
    .in_valid_i(\gen_operation_groups[2].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i[63:0]),
    .out_ready_i(opgrp_out_ready[2]),
    .out_valid_o(opgrp_out_valid[2]),
    .result_o(opgrp_outputs[113:82]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[81:77]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[76]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$8ae0fb4846518a699069525c1fbcfc9ca6c7fb2d\fpnew_opgroup_block_A94B6_B7406  \gen_operation_groups[3].i_opgroup_block  (
    .busy_o(opgrp_busy[3]),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .extension_bit_o(opgrp_ext[3]),
    .flush_i(flush_i),
    .in_ready_o(opgrp_in_ready[3]),
    .in_valid_i(\gen_operation_groups[3].in_valid ),
    .int_fmt_i(int_fmt_i),
    .is_boxed_i({ \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f }),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(opgrp_out_ready[3]),
    .out_valid_o(opgrp_out_valid[3]),
    .result_o(opgrp_outputs[151:120]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(opgrp_outputs[119:115]),
    .tag_i(tag_i),
    .tag_o(opgrp_outputs[114]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$c7df8ac0e0155c94d6c50b8fbc9eace2cebb89dd\rr_arb_tree_DE4E6_76EE6  i_arbiter (
    .clk_i(clk_i),
    .data_i(opgrp_outputs),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(opgrp_out_ready),
    .req_i(opgrp_out_valid),
    .req_o(out_valid_o),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$208.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$224.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$240.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:140$256.op  = 4'hx;
  assign \fpnew_pkg_get_opgroup$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:91$192.op  = 4'hx;
  assign \gen_operation_groups[0].input_boxed [8:0] = { \gen_operation_groups[0].input_boxed [14:12], 6'h3f };
  assign \gen_operation_groups[0].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[1].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf };
  assign \gen_operation_groups[1].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[2].input_boxed  = { \gen_operation_groups[0].input_boxed [13:12], \gen_operation_groups[0].input_boxed [10:9], \gen_operation_groups[0].input_boxed [13:12], 4'hf };
  assign \gen_operation_groups[2].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign \gen_operation_groups[3].input_boxed  = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f };
  assign \gen_operation_groups[3].slice_inputs.sv2v_autoblock_1.fmt  = 32'd5;
  assign is_boxed = { \gen_operation_groups[0].input_boxed [14:9], \gen_operation_groups[0].input_boxed [14:12], 6'h3f };
  assign result_o = arbiter_output[37:6];
  assign status_o = arbiter_output[5:1];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$6198635b5a75cb03441151c959726a3ed63638e9\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire _1_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  wire \gen_parallel_slices[0].active_format.in_valid ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _1_;
  assign \gen_parallel_slices[0].active_format.in_valid  = in_valid_i & _0_;
  assign _0_ = ! dst_fmt_i;
  wire [4:0] _6_ = { 4'h0, fmt_in_ready[0] };
  assign _1_ = _6_[dst_fmt_i +: 1];
  \$paramod$ef8a01f7dbf21494eba0876e48c61cd846beffa9\fpnew_opgroup_fmt_slice_E368D_75924  \gen_parallel_slices[0].active_format.i_fmt_slice  (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .extension_bit_o(fmt_outputs[1]),
    .flush_i(flush_i),
    .in_ready_o(fmt_in_ready[0]),
    .in_valid_i(\gen_parallel_slices[0].active_format.in_valid ),
    .is_boxed_i(is_boxed_i[1:0]),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(fmt_out_ready[0]),
    .out_valid_o(fmt_out_valid[0]),
    .result_o(fmt_outputs[38:7]),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .status_o(fmt_outputs[6:2]),
    .tag_i(tag_i),
    .tag_o(fmt_outputs[0]),
    .vectorial_op_i(vectorial_op_i)
  );
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i({ 156'hfffffffffffffffffffffffffffffffffffffff, fmt_outputs[38:0] }),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i({ 4'h0, fmt_out_valid[0] }),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = { 4'h0, busy_o };
  assign fmt_in_ready[4:1] = 4'h0;
  assign fmt_out_valid[4:1] = 4'h0;
  assign fmt_outputs[194:39] = 156'hfffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$78bb9057e4eca19d34dd44abcaa1f70852d0b351\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(195'h7ffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 195'h7ffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$8ae0fb4846518a699069525c1fbcfc9ca6c7fb2d\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [14:0] is_boxed_i;
  wire [14:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(195'h7ffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 195'h7ffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$c7df8ac0e0155c94d6c50b8fbc9eace2cebb89dd\rr_arb_tree_DE4E6_76EE6 (clk_i, rst_ni, flush_i, rr_i, req_i, gnt_o, data_i, req_o, gnt_i, data_o, idx_o);
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  input clk_i;
  wire clk_i;
  input [151:0] data_i;
  wire [151:0] data_i;
  output [37:0] data_o;
  wire [37:0] data_o;
  input flush_i;
  wire flush_i;
  wire [113:0] \gen_arbiter.data_nodes ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  wire [2:0] \gen_arbiter.gnt_nodes ;
  wire [5:0] \gen_arbiter.index_nodes ;
  wire [3:0] \gen_arbiter.req_d ;
  wire [2:0] \gen_arbiter.req_nodes ;
  reg [1:0] \gen_arbiter.rr_q ;
  input gnt_i;
  wire gnt_i;
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  output [1:0] idx_o;
  wire [1:0] idx_o;
  input [3:0] req_i;
  wire [3:0] req_i;
  output req_o;
  wire req_o;
  input [1:0] rr_i;
  wire [1:0] rr_i;
  input rst_ni;
  wire rst_ni;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:536$451.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:536$452.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:556$449.inp ;
  wire [1:0] \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:556$450.inp ;
  assign _01_ = req_i[1] & \gen_arbiter.rr_q [0];
  assign _02_ = req_i[3] & \gen_arbiter.rr_q [0];
  assign gnt_o[0] = \gen_arbiter.gnt_nodes [1] & _16_;
  assign gnt_o[2] = \gen_arbiter.gnt_nodes [2] & _17_;
  assign gnt_o[1] = \gen_arbiter.gnt_nodes [1] & \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign gnt_o[3] = \gen_arbiter.gnt_nodes [2] & \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _03_ = \gen_arbiter.req_nodes [2] & \gen_arbiter.rr_q [1];
  assign \gen_arbiter.gnt_nodes [1] = gnt_i & _19_;
  assign \gen_arbiter.gnt_nodes [2] = gnt_i & \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \gen_arbiter.rr_q  <= 2'h0;
    else if (_04_) \gen_arbiter.rr_q  <= _00_;
  assign _04_ = | { _13_, flush_i };
  assign _05_ = 32'd0 > \gen_arbiter.rr_q ;
  assign _06_ = 32'd1 > \gen_arbiter.rr_q ;
  assign _07_ = 32'd2 > \gen_arbiter.rr_q ;
  assign _08_ = 32'd3 > \gen_arbiter.rr_q ;
  assign _09_ = 32'd0 <= \gen_arbiter.rr_q ;
  assign _10_ = 32'd1 <= \gen_arbiter.rr_q ;
  assign _11_ = 32'd2 <= \gen_arbiter.rr_q ;
  assign _12_ = 32'd3 <= \gen_arbiter.rr_q ;
  assign _13_ = gnt_i && req_o;
  assign _14_ = ~ req_i[0];
  assign _15_ = ~ req_i[2];
  assign _16_ = ~ \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  assign _17_ = ~ \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  assign _18_ = ~ \gen_arbiter.req_nodes [1];
  assign _19_ = ~ \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  assign \gen_arbiter.req_nodes [1] = req_i[0] | req_i[1];
  assign \gen_arbiter.req_nodes [2] = req_i[2] | req_i[3];
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = _14_ | _01_;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = _15_ | _02_;
  assign req_o = \gen_arbiter.req_nodes [1] | \gen_arbiter.req_nodes [2];
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = _18_ | _03_;
  assign _00_ = flush_i ? 2'h0 : \gen_arbiter.gen_int_rr.rr_d ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = _05_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = _06_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = _07_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = _08_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = _09_ ? req_i[0] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = _10_ ? req_i[1] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = _11_ ? req_i[2] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = _12_ ? req_i[3] : 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty  ? \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx  : \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  assign \gen_arbiter.gen_int_rr.rr_d  = _13_ ? \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  : 2'hx;
  assign \gen_arbiter.data_nodes [75:38] = \gen_arbiter.gen_levels[1].gen_level[0].sel  ? data_i[75:38] : data_i[37:0];
  assign \gen_arbiter.data_nodes [113:76] = \gen_arbiter.gen_levels[1].gen_level[1].sel  ? data_i[151:114] : data_i[113:76];
  assign idx_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? { 1'h1, \gen_arbiter.gen_levels[1].gen_level[1].sel  } : { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign data_o = \gen_arbiter.gen_levels[0].gen_level[0].sel  ? \gen_arbiter.data_nodes [113:76] : \gen_arbiter.data_nodes [75:38];
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign \gen_arbiter.data_nodes [37:0] = data_o;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.index_nodes  = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel , 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel , idx_o };
  assign \gen_arbiter.req_d  = req_i;
  assign \gen_arbiter.req_nodes [0] = req_o;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:536$451.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:536$452.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:556$449.inp  = 2'hx;
  assign \sv2v_cast_71D7F$func$/Users/tianshu/Desktop/Local/Codes/590/Project/composer/Composer-Hardware/.fpnew_cache/FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_yosys.v:556$450.inp  = 2'hx;
endmodule

module \$paramod$de025a2a77ec744205232a6386e70416cba816e2\fpnew_opgroup_block_A94B6_B7406 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i
, busy_o);
  wire _0_;
  wire [38:0] arbiter_output;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire [4:0] fmt_busy;
  wire [4:0] fmt_in_ready;
  wire [4:0] fmt_out_ready;
  wire [4:0] fmt_out_valid;
  wire [194:0] fmt_outputs;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [9:0] is_boxed_i;
  wire [9:0] is_boxed_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign in_ready_o = in_valid_i & _0_;
  wire [4:0] _3_ = 5'h00;
  assign _0_ = _3_[dst_fmt_i +: 1];
  \$paramod$222c9d2fe41bb505d8fe9a14620ab4caf4a8aaf3\rr_arb_tree_52163_F264E  i_arbiter (
    .clk_i(clk_i),
    .data_i(195'h7ffffffffffffffffffffffffffffffffffffffffffffffff),
    .data_o(arbiter_output),
    .flush_i(flush_i),
    .gnt_i(out_ready_i),
    .gnt_o(fmt_out_ready),
    .req_i(5'h00),
    .req_o(out_valid_o),
    .rr_i(3'h0),
    .rst_ni(rst_ni)
  );
  assign busy_o = 1'h0;
  assign extension_bit_o = arbiter_output[1];
  assign fmt_busy = 5'h00;
  assign fmt_in_ready = 5'h00;
  assign fmt_out_valid = 5'h00;
  assign fmt_outputs = 195'h7ffffffffffffffffffffffffffffffffffffffffffffffff;
  assign result_o = arbiter_output[38:7];
  assign status_o = arbiter_output[6:2];
  assign tag_o = arbiter_output[0];
endmodule

module \$paramod$ef8a01f7dbf21494eba0876e48c61cd846beffa9\fpnew_opgroup_fmt_slice_E368D_75924 (clk_i, rst_ni, operands_i, is_boxed_i, rnd_mode_i, op_i, op_mod_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, extension_bit_o, tag_o, out_valid_o, out_ready_i, busy_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  output extension_bit_o;
  wire extension_bit_o;
  input flush_i;
  wire flush_i;
  wire \gen_num_lanes[0].active_lane.in_valid ;
  wire [63:0] \gen_num_lanes[0].active_lane.local_operands ;
  wire [31:0] \gen_num_lanes[0].active_lane.op_result ;
  wire [4:0] \gen_num_lanes[0].active_lane.op_status ;
  wire \gen_num_lanes[0].active_lane.out_ready ;
  wire \gen_num_lanes[0].active_lane.out_valid ;
  wire [31:0] \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i ;
  wire [31:0] \gen_num_lanes[0].local_result ;
  wire \gen_num_lanes[0].local_sign ;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] is_boxed_i;
  wire [1:0] is_boxed_i;
  wire lane_busy;
  wire [9:0] lane_class_mask;
  wire lane_ext_bit;
  wire lane_in_ready;
  wire lane_is_class;
  wire lane_out_valid;
  wire [4:0] lane_status;
  wire lane_tags;
  wire lane_vectorial;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [63:0] operands_i;
  wire [63:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  wire [31:0] \output_processing.sv2v_autoblock_2.i ;
  wire [4:0] \output_processing.temp_status ;
  wire result_is_class;
  wire result_is_vector;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  wire [31:0] slice_class_result;
  wire [31:0] slice_regular_result;
  wire [31:0] slice_result;
  wire [31:0] slice_vec_class_result;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  wire vectorial_op;
  input vectorial_op_i;
  wire vectorial_op_i;
  assign _02_ = lane_class_mask == 10'h004;
  assign _03_ = lane_class_mask == 10'h008;
  assign _04_ = lane_class_mask == 10'h080;
  assign _00_ = lane_class_mask == 10'h001;
  assign _05_ = lane_class_mask == 10'h040;
  assign _01_ = lane_class_mask == 10'h002;
  assign _06_ = lane_class_mask == 10'h020;
  assign _07_ = lane_class_mask == 10'h010;
  assign slice_vec_class_result[4] = lane_class_mask == 10'h100;
  assign slice_vec_class_result[5] = lane_class_mask == 10'h200;
  assign _08_ = _00_ || _01_;
  assign _09_ = _08_ || _02_;
  assign \gen_num_lanes[0].local_sign  = _09_ || _03_;
  assign slice_vec_class_result[0] = _04_ || _00_;
  assign slice_vec_class_result[1] = _05_ || _01_;
  assign slice_vec_class_result[2] = _06_ || _02_;
  assign slice_vec_class_result[3] = _07_ || _03_;
  assign slice_vec_class_result[6] = ~ \gen_num_lanes[0].local_sign ;
  assign slice_regular_result = lane_out_valid ? \gen_num_lanes[0].active_lane.op_result  : { lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit, lane_ext_bit };
  assign status_o = lane_out_valid ? \gen_num_lanes[0].active_lane.op_status  : 5'h00;
  assign slice_class_result = result_is_vector ? { 24'h000000, \gen_num_lanes[0].local_sign , slice_vec_class_result[6:0] } : { 22'h000000, lane_class_mask };
  assign result_o = result_is_class ? slice_class_result : slice_regular_result;
  assign extension_bit_o = lane_ext_bit;
  assign \gen_num_lanes[0].active_lane.in_valid  = in_valid_i;
  assign \gen_num_lanes[0].active_lane.local_operands  = operands_i;
  assign \gen_num_lanes[0].active_lane.out_ready  = out_ready_i;
  assign \gen_num_lanes[0].active_lane.out_valid  = lane_out_valid;
  assign \gen_num_lanes[0].active_lane.prepare_input.sv2v_autoblock_1.i  = 32'd2;
  assign \gen_num_lanes[0].local_result  = slice_regular_result;
  assign lane_busy = busy_o;
  assign lane_in_ready = in_ready_o;
  assign lane_is_class = result_is_class;
  assign lane_status = status_o;
  assign lane_tags = tag_o;
  assign lane_vectorial = result_is_vector;
  assign out_valid_o = lane_out_valid;
  assign \output_processing.sv2v_autoblock_2.i  = 32'd1;
  assign \output_processing.temp_status  = status_o;
  assign slice_result = slice_regular_result;
  assign slice_vec_class_result[31:7] = { 24'h000000, \gen_num_lanes[0].local_sign  };
  assign vectorial_op = vectorial_op_i;
endmodule

module \$paramod\lzc\WIDTH=32'00000000000000000000000000000100\MODE=1'0 (in_i, cnt_o, empty_o);
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  output empty_o;
  wire empty_o;
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  wire [3:0] \gen_lzc.in_tmp ;
  wire [7:0] \gen_lzc.index_lut ;
  wire [7:0] \gen_lzc.index_nodes ;
  wire [3:0] \gen_lzc.sel_nodes ;
  input [3:0] in_i;
  wire [3:0] in_i;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [1] = in_i[0] | in_i[1];
  assign \gen_lzc.sel_nodes [2] = in_i[2] | in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | \gen_lzc.sel_nodes [2];
  assign \gen_lzc.index_nodes [3:2] = in_i[0] ? 2'h0 : 2'h1;
  assign \gen_lzc.index_nodes [5:4] = in_i[2] ? 2'h2 : 2'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? \gen_lzc.index_nodes [3:2] : \gen_lzc.index_nodes [5:4];
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd4;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 8'he4;
  assign \gen_lzc.index_nodes [1:0] = cnt_o;
endmodule

module \$paramod\lzc\WIDTH=32'00000000000000000000000000000101\MODE=1'0 (in_i, cnt_o, empty_o);
  output [2:0] cnt_o;
  wire [2:0] cnt_o;
  output empty_o;
  wire empty_o;
  wire [31:0] \gen_lzc.flip_vector.sv2v_autoblock_1.i ;
  wire [4:0] \gen_lzc.in_tmp ;
  wire [14:0] \gen_lzc.index_lut ;
  wire [23:0] \gen_lzc.index_nodes ;
  wire [7:0] \gen_lzc.sel_nodes ;
  input [4:0] in_i;
  wire [4:0] in_i;
  assign empty_o = ~ \gen_lzc.sel_nodes [0];
  assign \gen_lzc.sel_nodes [3] = in_i[0] | in_i[1];
  assign \gen_lzc.sel_nodes [4] = in_i[2] | in_i[3];
  assign \gen_lzc.sel_nodes [0] = \gen_lzc.sel_nodes [1] | in_i[4];
  assign \gen_lzc.sel_nodes [1] = \gen_lzc.sel_nodes [3] | \gen_lzc.sel_nodes [4];
  assign \gen_lzc.index_nodes [11:9] = in_i[0] ? 3'h0 : 3'h1;
  assign \gen_lzc.index_nodes [14:12] = in_i[2] ? 3'h2 : 3'h3;
  assign cnt_o = \gen_lzc.sel_nodes [1] ? \gen_lzc.index_nodes [5:3] : \gen_lzc.index_nodes [8:6];
  assign \gen_lzc.index_nodes [5:3] = \gen_lzc.sel_nodes [3] ? \gen_lzc.index_nodes [11:9] : \gen_lzc.index_nodes [14:12];
  assign \gen_lzc.index_nodes [8:6] = in_i[4] ? 3'h4 : 3'h0;
  assign \gen_lzc.flip_vector.sv2v_autoblock_1.i  = 32'd5;
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut  = 15'h4688;
  assign { \gen_lzc.index_nodes [20:15], \gen_lzc.index_nodes [2:0] } = { 6'h04, cnt_o };
  assign { \gen_lzc.sel_nodes [6:5], \gen_lzc.sel_nodes [2] } = { 1'h0, in_i[4], in_i[4] };
endmodule

module FPNewBlackbox_tyfloat_l1_1s_1tw_2ops(clk_i, rst_ni, operands_i, rnd_mode_i, op_i, op_mod_i, src_fmt_i, dst_fmt_i, int_fmt_i, vectorial_op_i, tag_i, in_valid_i, in_ready_o, flush_i, result_o, status_o, tag_o, out_valid_o, out_ready_i, busy_o);
  output busy_o;
  wire busy_o;
  input clk_i;
  wire clk_i;
  input [2:0] dst_fmt_i;
  wire [2:0] dst_fmt_i;
  input flush_i;
  wire flush_i;
  output in_ready_o;
  wire in_ready_o;
  input in_valid_i;
  wire in_valid_i;
  input [1:0] int_fmt_i;
  wire [1:0] int_fmt_i;
  input [3:0] op_i;
  wire [3:0] op_i;
  input op_mod_i;
  wire op_mod_i;
  input [95:0] operands_i;
  wire [95:0] operands_i;
  input out_ready_i;
  wire out_ready_i;
  output out_valid_o;
  wire out_valid_o;
  output [31:0] result_o;
  wire [31:0] result_o;
  input [2:0] rnd_mode_i;
  wire [2:0] rnd_mode_i;
  input rst_ni;
  wire rst_ni;
  input [2:0] src_fmt_i;
  wire [2:0] src_fmt_i;
  output [4:0] status_o;
  wire [4:0] status_o;
  input tag_i;
  wire tag_i;
  output tag_o;
  wire tag_o;
  input vectorial_op_i;
  wire vectorial_op_i;
  \$paramod$4254dd24ee899980926ca0ea97f5501d8a413807\FPNewBlackbox_tyfloat_l1_1s_1tw_2ops_21317_11D0A  inst (
    .busy_o(busy_o),
    .clk_i(clk_i),
    .dst_fmt_i(dst_fmt_i),
    .flush_i(flush_i),
    .in_ready_o(in_ready_o),
    .in_valid_i(in_valid_i),
    .int_fmt_i(int_fmt_i),
    .op_i(op_i),
    .op_mod_i(op_mod_i),
    .operands_i(operands_i),
    .out_ready_i(out_ready_i),
    .out_valid_o(out_valid_o),
    .result_o(result_o),
    .rnd_mode_i(rnd_mode_i),
    .rst_ni(rst_ni),
    .src_fmt_i(src_fmt_i),
    .status_o(status_o),
    .tag_i(tag_i),
    .tag_o(tag_o),
    .vectorial_op_i(vectorial_op_i)
  );
endmodule
